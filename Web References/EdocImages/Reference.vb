'------------------------------------------------------------------------------
' <auto-generated>
'     Il codice è stato generato da uno strumento.
'     Versione runtime:4.0.30319.42000
'
'     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
'     il codice viene rigenerato.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Il codice sorgente è stato generato automaticamente da Microsoft.VSDesigner, versione 4.0.30319.42000.
'
Namespace EdocImages
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="ImagesSoap", [Namespace]:="http://edoc.elmisoftware.com/images/")>  _
    Partial Public Class Images
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private DownloadOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SignHashOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SignOperationCompleted As System.Threading.SendOrPostCallback
        
        Private HackSignOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LogonOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LogOnUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UploadOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AbortOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UploadGDDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteDocumentoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLastImageDocumentoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDocumentoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTemplateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ProcessDocumentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateTempfileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetHashFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseHashFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSignerInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MoveDocumentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.LiftCore.My.MySettings.Default.LiftCore_srvedoc_Images
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event DownloadCompleted As DownloadCompletedEventHandler
        
        '''<remarks/>
        Public Event SignHashCompleted As SignHashCompletedEventHandler
        
        '''<remarks/>
        Public Event SignCompleted As SignCompletedEventHandler
        
        '''<remarks/>
        Public Event HackSignCompleted As HackSignCompletedEventHandler
        
        '''<remarks/>
        Public Event LogonCompleted As LogonCompletedEventHandler
        
        '''<remarks/>
        Public Event LogOnUserCompleted As LogOnUserCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateCompleted As CreateCompletedEventHandler
        
        '''<remarks/>
        Public Event UploadCompleted As UploadCompletedEventHandler
        
        '''<remarks/>
        Public Event SaveCompleted As SaveCompletedEventHandler
        
        '''<remarks/>
        Public Event AbortCompleted As AbortCompletedEventHandler
        
        '''<remarks/>
        Public Event UploadGDDCompleted As UploadGDDCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteDocumentoCompleted As DeleteDocumentoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLastImageDocumentoCompleted As GetLastImageDocumentoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDocumentoCompleted As GetDocumentoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTemplateCompleted As GetTemplateCompletedEventHandler
        
        '''<remarks/>
        Public Event ProcessDocumentCompleted As ProcessDocumentCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateTempfileCompleted As CreateTempfileCompletedEventHandler
        
        '''<remarks/>
        Public Event GetHashFileCompleted As GetHashFileCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFileCompleted As GetFileCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseHashFileCompleted As CloseHashFileCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseFileCompleted As CloseFileCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSignerInfoCompleted As GetSignerInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event MoveDocumentCompleted As MoveDocumentCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edoc.elmisoftware.com/images/Download", RequestNamespace:="http://edoc.elmisoftware.com/images/", ResponseNamespace:="http://edoc.elmisoftware.com/images/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Download(ByVal BD As String, ByVal Doc As String, ByVal OnlyHash As Boolean, ByRef Image As Integer, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByRef file() As Byte) As String
            Dim results() As Object = Me.Invoke("Download", New Object() {BD, Doc, OnlyHash})
            Image = CType(results(1),Integer)
            file = CType(results(2),Byte())
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DownloadAsync(ByVal BD As String, ByVal Doc As String, ByVal OnlyHash As Boolean)
            Me.DownloadAsync(BD, Doc, OnlyHash, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DownloadAsync(ByVal BD As String, ByVal Doc As String, ByVal OnlyHash As Boolean, ByVal userState As Object)
            If (Me.DownloadOperationCompleted Is Nothing) Then
                Me.DownloadOperationCompleted = AddressOf Me.OnDownloadOperationCompleted
            End If
            Me.InvokeAsync("Download", New Object() {BD, Doc, OnlyHash}, Me.DownloadOperationCompleted, userState)
        End Sub
        
        Private Sub OnDownloadOperationCompleted(ByVal arg As Object)
            If (Not (Me.DownloadCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DownloadCompleted(Me, New DownloadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edoc.elmisoftware.com/images/SignHash", RequestNamespace:="http://edoc.elmisoftware.com/images/", ResponseNamespace:="http://edoc.elmisoftware.com/images/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SignHash(ByVal BD As String, ByVal Image As Integer, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal file() As Byte) As Integer
            Dim results() As Object = Me.Invoke("SignHash", New Object() {BD, Image, file})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SignHashAsync(ByVal BD As String, ByVal Image As Integer, ByVal file() As Byte)
            Me.SignHashAsync(BD, Image, file, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SignHashAsync(ByVal BD As String, ByVal Image As Integer, ByVal file() As Byte, ByVal userState As Object)
            If (Me.SignHashOperationCompleted Is Nothing) Then
                Me.SignHashOperationCompleted = AddressOf Me.OnSignHashOperationCompleted
            End If
            Me.InvokeAsync("SignHash", New Object() {BD, Image, file}, Me.SignHashOperationCompleted, userState)
        End Sub
        
        Private Sub OnSignHashOperationCompleted(ByVal arg As Object)
            If (Not (Me.SignHashCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SignHashCompleted(Me, New SignHashCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edoc.elmisoftware.com/images/Sign", RequestNamespace:="http://edoc.elmisoftware.com/images/", ResponseNamespace:="http://edoc.elmisoftware.com/images/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Sign(ByVal BD As String, ByVal Image As Integer, ByVal guid As String, ByVal ext As String) As Integer
            Dim results() As Object = Me.Invoke("Sign", New Object() {BD, Image, guid, ext})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SignAsync(ByVal BD As String, ByVal Image As Integer, ByVal guid As String, ByVal ext As String)
            Me.SignAsync(BD, Image, guid, ext, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SignAsync(ByVal BD As String, ByVal Image As Integer, ByVal guid As String, ByVal ext As String, ByVal userState As Object)
            If (Me.SignOperationCompleted Is Nothing) Then
                Me.SignOperationCompleted = AddressOf Me.OnSignOperationCompleted
            End If
            Me.InvokeAsync("Sign", New Object() {BD, Image, guid, ext}, Me.SignOperationCompleted, userState)
        End Sub
        
        Private Sub OnSignOperationCompleted(ByVal arg As Object)
            If (Not (Me.SignCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SignCompleted(Me, New SignCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edoc.elmisoftware.com/images/HackSign", RequestNamespace:="http://edoc.elmisoftware.com/images/", ResponseNamespace:="http://edoc.elmisoftware.com/images/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function HackSign(ByVal BD As String, ByVal Image As Integer, ByVal User As String, ByVal ext As String) As Integer
            Dim results() As Object = Me.Invoke("HackSign", New Object() {BD, Image, User, ext})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub HackSignAsync(ByVal BD As String, ByVal Image As Integer, ByVal User As String, ByVal ext As String)
            Me.HackSignAsync(BD, Image, User, ext, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub HackSignAsync(ByVal BD As String, ByVal Image As Integer, ByVal User As String, ByVal ext As String, ByVal userState As Object)
            If (Me.HackSignOperationCompleted Is Nothing) Then
                Me.HackSignOperationCompleted = AddressOf Me.OnHackSignOperationCompleted
            End If
            Me.InvokeAsync("HackSign", New Object() {BD, Image, User, ext}, Me.HackSignOperationCompleted, userState)
        End Sub
        
        Private Sub OnHackSignOperationCompleted(ByVal arg As Object)
            If (Not (Me.HackSignCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent HackSignCompleted(Me, New HackSignCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edoc.elmisoftware.com/images/Logon", RequestNamespace:="http://edoc.elmisoftware.com/images/", ResponseNamespace:="http://edoc.elmisoftware.com/images/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Logon(ByVal UserName As String, ByVal Pwd As String) As Boolean
            Dim results() As Object = Me.Invoke("Logon", New Object() {UserName, Pwd})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LogonAsync(ByVal UserName As String, ByVal Pwd As String)
            Me.LogonAsync(UserName, Pwd, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LogonAsync(ByVal UserName As String, ByVal Pwd As String, ByVal userState As Object)
            If (Me.LogonOperationCompleted Is Nothing) Then
                Me.LogonOperationCompleted = AddressOf Me.OnLogonOperationCompleted
            End If
            Me.InvokeAsync("Logon", New Object() {UserName, Pwd}, Me.LogonOperationCompleted, userState)
        End Sub
        
        Private Sub OnLogonOperationCompleted(ByVal arg As Object)
            If (Not (Me.LogonCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LogonCompleted(Me, New LogonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edoc.elmisoftware.com/images/LogOnUser", RequestNamespace:="http://edoc.elmisoftware.com/images/", ResponseNamespace:="http://edoc.elmisoftware.com/images/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LogOnUser(ByVal user As String) As String
            Dim results() As Object = Me.Invoke("LogOnUser", New Object() {user})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LogOnUserAsync(ByVal user As String)
            Me.LogOnUserAsync(user, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LogOnUserAsync(ByVal user As String, ByVal userState As Object)
            If (Me.LogOnUserOperationCompleted Is Nothing) Then
                Me.LogOnUserOperationCompleted = AddressOf Me.OnLogOnUserOperationCompleted
            End If
            Me.InvokeAsync("LogOnUser", New Object() {user}, Me.LogOnUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnLogOnUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.LogOnUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LogOnUserCompleted(Me, New LogOnUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edoc.elmisoftware.com/images/Create", RequestNamespace:="http://edoc.elmisoftware.com/images/", ResponseNamespace:="http://edoc.elmisoftware.com/images/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Create() As String
            Dim results() As Object = Me.Invoke("Create", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateAsync()
            Me.CreateAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateAsync(ByVal userState As Object)
            If (Me.CreateOperationCompleted Is Nothing) Then
                Me.CreateOperationCompleted = AddressOf Me.OnCreateOperationCompleted
            End If
            Me.InvokeAsync("Create", New Object(-1) {}, Me.CreateOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateCompleted(Me, New CreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edoc.elmisoftware.com/images/Upload", RequestNamespace:="http://edoc.elmisoftware.com/images/", ResponseNamespace:="http://edoc.elmisoftware.com/images/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Upload(ByVal guid As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal Image() As Byte) As String
            Dim results() As Object = Me.Invoke("Upload", New Object() {guid, Image})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UploadAsync(ByVal guid As String, ByVal Image() As Byte)
            Me.UploadAsync(guid, Image, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UploadAsync(ByVal guid As String, ByVal Image() As Byte, ByVal userState As Object)
            If (Me.UploadOperationCompleted Is Nothing) Then
                Me.UploadOperationCompleted = AddressOf Me.OnUploadOperationCompleted
            End If
            Me.InvokeAsync("Upload", New Object() {guid, Image}, Me.UploadOperationCompleted, userState)
        End Sub
        
        Private Sub OnUploadOperationCompleted(ByVal arg As Object)
            If (Not (Me.UploadCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UploadCompleted(Me, New UploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edoc.elmisoftware.com/images/Save", RequestNamespace:="http://edoc.elmisoftware.com/images/", ResponseNamespace:="http://edoc.elmisoftware.com/images/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Save(ByVal BD As String, ByVal ID As String, ByVal Description As String, ByVal guid As String) As Integer
            Dim results() As Object = Me.Invoke("Save", New Object() {BD, ID, Description, guid})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveAsync(ByVal BD As String, ByVal ID As String, ByVal Description As String, ByVal guid As String)
            Me.SaveAsync(BD, ID, Description, guid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveAsync(ByVal BD As String, ByVal ID As String, ByVal Description As String, ByVal guid As String, ByVal userState As Object)
            If (Me.SaveOperationCompleted Is Nothing) Then
                Me.SaveOperationCompleted = AddressOf Me.OnSaveOperationCompleted
            End If
            Me.InvokeAsync("Save", New Object() {BD, ID, Description, guid}, Me.SaveOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveCompleted(Me, New SaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edoc.elmisoftware.com/images/Abort", RequestNamespace:="http://edoc.elmisoftware.com/images/", ResponseNamespace:="http://edoc.elmisoftware.com/images/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Abort(ByVal guid As String)
            Me.Invoke("Abort", New Object() {guid})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AbortAsync(ByVal guid As String)
            Me.AbortAsync(guid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AbortAsync(ByVal guid As String, ByVal userState As Object)
            If (Me.AbortOperationCompleted Is Nothing) Then
                Me.AbortOperationCompleted = AddressOf Me.OnAbortOperationCompleted
            End If
            Me.InvokeAsync("Abort", New Object() {guid}, Me.AbortOperationCompleted, userState)
        End Sub
        
        Private Sub OnAbortOperationCompleted(ByVal arg As Object)
            If (Not (Me.AbortCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AbortCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edoc.elmisoftware.com/images/UploadGDD", RequestNamespace:="http://edoc.elmisoftware.com/images/", ResponseNamespace:="http://edoc.elmisoftware.com/images/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UploadGDD(ByVal GddData As String, ByRef Err As String) As Integer
            Dim results() As Object = Me.Invoke("UploadGDD", New Object() {GddData})
            Err = CType(results(1),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UploadGDDAsync(ByVal GddData As String)
            Me.UploadGDDAsync(GddData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UploadGDDAsync(ByVal GddData As String, ByVal userState As Object)
            If (Me.UploadGDDOperationCompleted Is Nothing) Then
                Me.UploadGDDOperationCompleted = AddressOf Me.OnUploadGDDOperationCompleted
            End If
            Me.InvokeAsync("UploadGDD", New Object() {GddData}, Me.UploadGDDOperationCompleted, userState)
        End Sub
        
        Private Sub OnUploadGDDOperationCompleted(ByVal arg As Object)
            If (Not (Me.UploadGDDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UploadGDDCompleted(Me, New UploadGDDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edoc.elmisoftware.com/images/DeleteDocumento", RequestNamespace:="http://edoc.elmisoftware.com/images/", ResponseNamespace:="http://edoc.elmisoftware.com/images/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteDocumento(ByVal BD As String, ByVal ID As Integer) As Integer
            Dim results() As Object = Me.Invoke("DeleteDocumento", New Object() {BD, ID})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteDocumentoAsync(ByVal BD As String, ByVal ID As Integer)
            Me.DeleteDocumentoAsync(BD, ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteDocumentoAsync(ByVal BD As String, ByVal ID As Integer, ByVal userState As Object)
            If (Me.DeleteDocumentoOperationCompleted Is Nothing) Then
                Me.DeleteDocumentoOperationCompleted = AddressOf Me.OnDeleteDocumentoOperationCompleted
            End If
            Me.InvokeAsync("DeleteDocumento", New Object() {BD, ID}, Me.DeleteDocumentoOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteDocumentoOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteDocumentoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteDocumentoCompleted(Me, New DeleteDocumentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edoc.elmisoftware.com/images/GetLastImageDocumento", RequestNamespace:="http://edoc.elmisoftware.com/images/", ResponseNamespace:="http://edoc.elmisoftware.com/images/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLastImageDocumento(ByVal BD As String, ByVal ID As Integer, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByRef file() As Byte) As String
            Dim results() As Object = Me.Invoke("GetLastImageDocumento", New Object() {BD, ID})
            file = CType(results(1),Byte())
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLastImageDocumentoAsync(ByVal BD As String, ByVal ID As Integer)
            Me.GetLastImageDocumentoAsync(BD, ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLastImageDocumentoAsync(ByVal BD As String, ByVal ID As Integer, ByVal userState As Object)
            If (Me.GetLastImageDocumentoOperationCompleted Is Nothing) Then
                Me.GetLastImageDocumentoOperationCompleted = AddressOf Me.OnGetLastImageDocumentoOperationCompleted
            End If
            Me.InvokeAsync("GetLastImageDocumento", New Object() {BD, ID}, Me.GetLastImageDocumentoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLastImageDocumentoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLastImageDocumentoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLastImageDocumentoCompleted(Me, New GetLastImageDocumentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edoc.elmisoftware.com/images/GetDocumento", RequestNamespace:="http://edoc.elmisoftware.com/images/", ResponseNamespace:="http://edoc.elmisoftware.com/images/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDocumento(ByVal BD As String, ByVal ID As Integer) As Documento
            Dim results() As Object = Me.Invoke("GetDocumento", New Object() {BD, ID})
            Return CType(results(0),Documento)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDocumentoAsync(ByVal BD As String, ByVal ID As Integer)
            Me.GetDocumentoAsync(BD, ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDocumentoAsync(ByVal BD As String, ByVal ID As Integer, ByVal userState As Object)
            If (Me.GetDocumentoOperationCompleted Is Nothing) Then
                Me.GetDocumentoOperationCompleted = AddressOf Me.OnGetDocumentoOperationCompleted
            End If
            Me.InvokeAsync("GetDocumento", New Object() {BD, ID}, Me.GetDocumentoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDocumentoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDocumentoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDocumentoCompleted(Me, New GetDocumentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edoc.elmisoftware.com/images/GetTemplate", RequestNamespace:="http://edoc.elmisoftware.com/images/", ResponseNamespace:="http://edoc.elmisoftware.com/images/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTemplate(ByVal TempFile As String) As String
            Dim results() As Object = Me.Invoke("GetTemplate", New Object() {TempFile})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTemplateAsync(ByVal TempFile As String)
            Me.GetTemplateAsync(TempFile, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTemplateAsync(ByVal TempFile As String, ByVal userState As Object)
            If (Me.GetTemplateOperationCompleted Is Nothing) Then
                Me.GetTemplateOperationCompleted = AddressOf Me.OnGetTemplateOperationCompleted
            End If
            Me.InvokeAsync("GetTemplate", New Object() {TempFile}, Me.GetTemplateOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTemplateOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTemplateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTemplateCompleted(Me, New GetTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edoc.elmisoftware.com/images/ProcessDocument", RequestNamespace:="http://edoc.elmisoftware.com/images/", ResponseNamespace:="http://edoc.elmisoftware.com/images/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ProcessDocument(ByVal TempFile As String, ByVal Queue As String, ByVal Guid As String)
            Me.Invoke("ProcessDocument", New Object() {TempFile, Queue, Guid})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ProcessDocumentAsync(ByVal TempFile As String, ByVal Queue As String, ByVal Guid As String)
            Me.ProcessDocumentAsync(TempFile, Queue, Guid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ProcessDocumentAsync(ByVal TempFile As String, ByVal Queue As String, ByVal Guid As String, ByVal userState As Object)
            If (Me.ProcessDocumentOperationCompleted Is Nothing) Then
                Me.ProcessDocumentOperationCompleted = AddressOf Me.OnProcessDocumentOperationCompleted
            End If
            Me.InvokeAsync("ProcessDocument", New Object() {TempFile, Queue, Guid}, Me.ProcessDocumentOperationCompleted, userState)
        End Sub
        
        Private Sub OnProcessDocumentOperationCompleted(ByVal arg As Object)
            If (Not (Me.ProcessDocumentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ProcessDocumentCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edoc.elmisoftware.com/images/CreateTempfile", RequestNamespace:="http://edoc.elmisoftware.com/images/", ResponseNamespace:="http://edoc.elmisoftware.com/images/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateTempfile(ByVal guid As String, ByVal filename As String) As String
            Dim results() As Object = Me.Invoke("CreateTempfile", New Object() {guid, filename})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateTempfileAsync(ByVal guid As String, ByVal filename As String)
            Me.CreateTempfileAsync(guid, filename, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateTempfileAsync(ByVal guid As String, ByVal filename As String, ByVal userState As Object)
            If (Me.CreateTempfileOperationCompleted Is Nothing) Then
                Me.CreateTempfileOperationCompleted = AddressOf Me.OnCreateTempfileOperationCompleted
            End If
            Me.InvokeAsync("CreateTempfile", New Object() {guid, filename}, Me.CreateTempfileOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateTempfileOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateTempfileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateTempfileCompleted(Me, New CreateTempfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edoc.elmisoftware.com/images/GetHashFile", RequestNamespace:="http://edoc.elmisoftware.com/images/", ResponseNamespace:="http://edoc.elmisoftware.com/images/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetHashFile(ByVal CodiceAzienda As String, ByVal Tipo As String, ByVal Anno As Integer, ByVal NRLotto As Integer) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("GetHashFile", New Object() {CodiceAzienda, Tipo, Anno, NRLotto})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetHashFileAsync(ByVal CodiceAzienda As String, ByVal Tipo As String, ByVal Anno As Integer, ByVal NRLotto As Integer)
            Me.GetHashFileAsync(CodiceAzienda, Tipo, Anno, NRLotto, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetHashFileAsync(ByVal CodiceAzienda As String, ByVal Tipo As String, ByVal Anno As Integer, ByVal NRLotto As Integer, ByVal userState As Object)
            If (Me.GetHashFileOperationCompleted Is Nothing) Then
                Me.GetHashFileOperationCompleted = AddressOf Me.OnGetHashFileOperationCompleted
            End If
            Me.InvokeAsync("GetHashFile", New Object() {CodiceAzienda, Tipo, Anno, NRLotto}, Me.GetHashFileOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetHashFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetHashFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetHashFileCompleted(Me, New GetHashFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edoc.elmisoftware.com/images/GetFile", RequestNamespace:="http://edoc.elmisoftware.com/images/", ResponseNamespace:="http://edoc.elmisoftware.com/images/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFile(ByVal CodiceAzienda As String, ByVal Tipo As String, ByVal Anno As Integer, ByVal NRLotto As Integer, ByVal FileType As String) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("GetFile", New Object() {CodiceAzienda, Tipo, Anno, NRLotto, FileType})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFileAsync(ByVal CodiceAzienda As String, ByVal Tipo As String, ByVal Anno As Integer, ByVal NRLotto As Integer, ByVal FileType As String)
            Me.GetFileAsync(CodiceAzienda, Tipo, Anno, NRLotto, FileType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFileAsync(ByVal CodiceAzienda As String, ByVal Tipo As String, ByVal Anno As Integer, ByVal NRLotto As Integer, ByVal FileType As String, ByVal userState As Object)
            If (Me.GetFileOperationCompleted Is Nothing) Then
                Me.GetFileOperationCompleted = AddressOf Me.OnGetFileOperationCompleted
            End If
            Me.InvokeAsync("GetFile", New Object() {CodiceAzienda, Tipo, Anno, NRLotto, FileType}, Me.GetFileOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFileCompleted(Me, New GetFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edoc.elmisoftware.com/images/CloseHashFile", RequestNamespace:="http://edoc.elmisoftware.com/images/", ResponseNamespace:="http://edoc.elmisoftware.com/images/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CloseHashFile(ByVal CodiceAzienda As String, ByVal Tipo As String, ByVal Anno As Integer, ByVal NRLotto As Integer, ByVal guid As String) As Integer
            Dim results() As Object = Me.Invoke("CloseHashFile", New Object() {CodiceAzienda, Tipo, Anno, NRLotto, guid})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CloseHashFileAsync(ByVal CodiceAzienda As String, ByVal Tipo As String, ByVal Anno As Integer, ByVal NRLotto As Integer, ByVal guid As String)
            Me.CloseHashFileAsync(CodiceAzienda, Tipo, Anno, NRLotto, guid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseHashFileAsync(ByVal CodiceAzienda As String, ByVal Tipo As String, ByVal Anno As Integer, ByVal NRLotto As Integer, ByVal guid As String, ByVal userState As Object)
            If (Me.CloseHashFileOperationCompleted Is Nothing) Then
                Me.CloseHashFileOperationCompleted = AddressOf Me.OnCloseHashFileOperationCompleted
            End If
            Me.InvokeAsync("CloseHashFile", New Object() {CodiceAzienda, Tipo, Anno, NRLotto, guid}, Me.CloseHashFileOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseHashFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseHashFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseHashFileCompleted(Me, New CloseHashFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edoc.elmisoftware.com/images/CloseFile", RequestNamespace:="http://edoc.elmisoftware.com/images/", ResponseNamespace:="http://edoc.elmisoftware.com/images/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CloseFile(ByVal CodiceAzienda As String, ByVal Tipo As String, ByVal Anno As Integer, ByVal NRLotto As Integer, ByVal guid As String, ByVal FileType As String) As Integer
            Dim results() As Object = Me.Invoke("CloseFile", New Object() {CodiceAzienda, Tipo, Anno, NRLotto, guid, FileType})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CloseFileAsync(ByVal CodiceAzienda As String, ByVal Tipo As String, ByVal Anno As Integer, ByVal NRLotto As Integer, ByVal guid As String, ByVal FileType As String)
            Me.CloseFileAsync(CodiceAzienda, Tipo, Anno, NRLotto, guid, FileType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseFileAsync(ByVal CodiceAzienda As String, ByVal Tipo As String, ByVal Anno As Integer, ByVal NRLotto As Integer, ByVal guid As String, ByVal FileType As String, ByVal userState As Object)
            If (Me.CloseFileOperationCompleted Is Nothing) Then
                Me.CloseFileOperationCompleted = AddressOf Me.OnCloseFileOperationCompleted
            End If
            Me.InvokeAsync("CloseFile", New Object() {CodiceAzienda, Tipo, Anno, NRLotto, guid, FileType}, Me.CloseFileOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseFileCompleted(Me, New CloseFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edoc.elmisoftware.com/images/GetSignerInfo", RequestNamespace:="http://edoc.elmisoftware.com/images/", ResponseNamespace:="http://edoc.elmisoftware.com/images/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSignerInfo(ByVal BD As String, ByVal ID As Integer) As <System.Xml.Serialization.XmlArrayItemAttribute(IsNullable:=false)> KeyValuePairOfStringString()
            Dim results() As Object = Me.Invoke("GetSignerInfo", New Object() {BD, ID})
            Return CType(results(0),KeyValuePairOfStringString())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSignerInfoAsync(ByVal BD As String, ByVal ID As Integer)
            Me.GetSignerInfoAsync(BD, ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSignerInfoAsync(ByVal BD As String, ByVal ID As Integer, ByVal userState As Object)
            If (Me.GetSignerInfoOperationCompleted Is Nothing) Then
                Me.GetSignerInfoOperationCompleted = AddressOf Me.OnGetSignerInfoOperationCompleted
            End If
            Me.InvokeAsync("GetSignerInfo", New Object() {BD, ID}, Me.GetSignerInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSignerInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSignerInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSignerInfoCompleted(Me, New GetSignerInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edoc.elmisoftware.com/images/MoveDocument", RequestNamespace:="http://edoc.elmisoftware.com/images/", ResponseNamespace:="http://edoc.elmisoftware.com/images/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub MoveDocument(ByVal BD As String, ByVal VecchioPercorso As String, ByVal NuovoPercorso As String)
            Me.Invoke("MoveDocument", New Object() {BD, VecchioPercorso, NuovoPercorso})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MoveDocumentAsync(ByVal BD As String, ByVal VecchioPercorso As String, ByVal NuovoPercorso As String)
            Me.MoveDocumentAsync(BD, VecchioPercorso, NuovoPercorso, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MoveDocumentAsync(ByVal BD As String, ByVal VecchioPercorso As String, ByVal NuovoPercorso As String, ByVal userState As Object)
            If (Me.MoveDocumentOperationCompleted Is Nothing) Then
                Me.MoveDocumentOperationCompleted = AddressOf Me.OnMoveDocumentOperationCompleted
            End If
            Me.InvokeAsync("MoveDocument", New Object() {BD, VecchioPercorso, NuovoPercorso}, Me.MoveDocumentOperationCompleted, userState)
        End Sub
        
        Private Sub OnMoveDocumentOperationCompleted(ByVal arg As Object)
            If (Not (Me.MoveDocumentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MoveDocumentCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://edoc.elmisoftware.com/images/")>  _
    Partial Public Class Documento
        
        Private immaginiField() As Revisione
        
        Private tipoContenutoLookupField As String
        
        Private tipoDocumentoLookupField As String
        
        Private statusLookupField As String
        
        Private dtProtocolloField As String
        
        Private dtDocumentoField As String
        
        Private dtArchiviazioneField As String
        
        Private dtScadenzaField As String
        
        Private dtPresaInCaricoField As String
        
        Private tagsField() As DocumentTag
        
        Private toUserField As String
        
        Private openedField As Boolean
        
        Private closedField As Boolean
        
        Private riservatoField As Boolean
        
        Private havePreviewField As Boolean
        
        Private isIndexedField As Boolean
        
        Private protocolloUfficialeField As String
        
        Private statusTypeField As StatusType
        
        Private idField As Integer
        
        Private revisioneField As Integer
        
        Private iDRevisioneField As Integer
        
        Private bancaDatiField As String
        
        Private descrizioneField As String
        
        Private oggettoProtocolloField As String
        
        Private tipoTrasportoField As String
        
        Private codiceTipoTrasportoField As String
        
        Private direzioneField As String
        
        Private proprietarioField As String
        
        Private sessioneEmergenzaField As String
        
        Private listaField As String
        
        Private raccoglitoreField As String
        
        Private elencoRaccoglitoreField As String
        
        Private commentoField As String
        
        Private tipoDocumentoField As String
        
        Private decodificaTipoDocumentoField As String
        
        Private numeroDocumentoField As String
        
        Private protocolloField As String
        
        Private annoProtocolloField As Integer
        
        Private numeroPraticaField As String
        
        Private annoPraticaField As String
        
        Private dataDocumentoField As Date
        
        Private dataArchiviazioneField As Date
        
        Private dataSpedizioneField As Date
        
        Private dataRicezioneField As Date
        
        Private dataScadenzaField As Date
        
        Private dataRevisioneField As Date
        
        Private dataFirmaField As Date
        
        Private dataMasterizzazioneField As Date
        
        Private dataProtocolloField As Date
        
        Private dataModificaField As Date
        
        Private daCompletareField As Boolean
        
        Private approvatoField As Boolean
        
        Private rifiutatoField As Boolean
        
        Private firmatoField As Boolean
        
        Private marcatoField As Boolean
        
        Private masterizzatoField As Boolean
        
        Private daMasterizzareField As Boolean
        
        Private daFirmareField As Boolean
        
        Private criptatoField As Boolean
        
        Private modificatoField As Boolean
        
        Private canViewField As Boolean
        
        Private canAuthorizeField As Boolean
        
        Private canApproveField As Boolean
        
        Private canEditField As Boolean
        
        Private canDeleteField As Boolean
        
        Private canPrintField As Boolean
        
        Private canCreateField As Boolean
        
        Private canAddImageField As Boolean
        
        Private utenteApprovatoreField As String
        
        Private utenteRevisoreField As String
        
        Private utenteFirmaField As String
        
        Private utenteMarcaField As String
        
        Private utenteMasterizzatoreField As String
        
        Private permessiField As Permessi
        
        Private computerField As String
        
        Private serialeCDField As String
        
        Private improntaField As String
        
        Private kbyteField As Long
        
        Private numeroImmaginiField As Integer
        
        Private tipoChiaveField() As String
        
        Private nomeChiaveField() As String
        
        Private valoreChiaveField() As String
        
        Private lookupValoreChiaveField() As String
        
        Private rubricaMittenteField As String
        
        Private mittenteField As String
        
        Private destinatariInterniField As String
        
        Private destinatariEsterniField As String
        
        Private destinatariInterniUtentiField As String
        
        Private destinatariInterniPCField As String
        
        Private destinatariEsterniPCField As String
        
        Private destinatariInterniUtentiPCField As String
        
        Private protocolloEsternoField As String
        
        Private dataProtocolloEsternoField As Date
        
        Private filenameField As String
        
        Private workflowField As String
        
        Private passoWorkflowField As Integer
        
        Private distribuzioneField As String
        
        Private registroField As String
        
        Private statusField As String
        
        Private tipoContenutoField As ContentType
        
        Private firmatarioField As String
        
        Private soggettoFirmatarioField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayItemAttribute(IsNullable:=false)>  _
        Public Property Immagini() As Revisione()
            Get
                Return Me.immaginiField
            End Get
            Set
                Me.immaginiField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TipoContenutoLookup() As String
            Get
                Return Me.tipoContenutoLookupField
            End Get
            Set
                Me.tipoContenutoLookupField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TipoDocumentoLookup() As String
            Get
                Return Me.tipoDocumentoLookupField
            End Get
            Set
                Me.tipoDocumentoLookupField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StatusLookup() As String
            Get
                Return Me.statusLookupField
            End Get
            Set
                Me.statusLookupField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DtProtocollo() As String
            Get
                Return Me.dtProtocolloField
            End Get
            Set
                Me.dtProtocolloField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DtDocumento() As String
            Get
                Return Me.dtDocumentoField
            End Get
            Set
                Me.dtDocumentoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DtArchiviazione() As String
            Get
                Return Me.dtArchiviazioneField
            End Get
            Set
                Me.dtArchiviazioneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DtScadenza() As String
            Get
                Return Me.dtScadenzaField
            End Get
            Set
                Me.dtScadenzaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DtPresaInCarico() As String
            Get
                Return Me.dtPresaInCaricoField
            End Get
            Set
                Me.dtPresaInCaricoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayItemAttribute(IsNullable:=false)>  _
        Public Property Tags() As DocumentTag()
            Get
                Return Me.tagsField
            End Get
            Set
                Me.tagsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ToUser() As String
            Get
                Return Me.toUserField
            End Get
            Set
                Me.toUserField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Opened() As Boolean
            Get
                Return Me.openedField
            End Get
            Set
                Me.openedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Closed() As Boolean
            Get
                Return Me.closedField
            End Get
            Set
                Me.closedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Riservato() As Boolean
            Get
                Return Me.riservatoField
            End Get
            Set
                Me.riservatoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HavePreview() As Boolean
            Get
                Return Me.havePreviewField
            End Get
            Set
                Me.havePreviewField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsIndexed() As Boolean
            Get
                Return Me.isIndexedField
            End Get
            Set
                Me.isIndexedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProtocolloUfficiale() As String
            Get
                Return Me.protocolloUfficialeField
            End Get
            Set
                Me.protocolloUfficialeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StatusType() As StatusType
            Get
                Return Me.statusTypeField
            End Get
            Set
                Me.statusTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property id() As Integer
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Revisione() As Integer
            Get
                Return Me.revisioneField
            End Get
            Set
                Me.revisioneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IDRevisione() As Integer
            Get
                Return Me.iDRevisioneField
            End Get
            Set
                Me.iDRevisioneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BancaDati() As String
            Get
                Return Me.bancaDatiField
            End Get
            Set
                Me.bancaDatiField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Descrizione() As String
            Get
                Return Me.descrizioneField
            End Get
            Set
                Me.descrizioneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OggettoProtocollo() As String
            Get
                Return Me.oggettoProtocolloField
            End Get
            Set
                Me.oggettoProtocolloField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TipoTrasporto() As String
            Get
                Return Me.tipoTrasportoField
            End Get
            Set
                Me.tipoTrasportoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CodiceTipoTrasporto() As String
            Get
                Return Me.codiceTipoTrasportoField
            End Get
            Set
                Me.codiceTipoTrasportoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Direzione() As String
            Get
                Return Me.direzioneField
            End Get
            Set
                Me.direzioneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Proprietario() As String
            Get
                Return Me.proprietarioField
            End Get
            Set
                Me.proprietarioField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SessioneEmergenza() As String
            Get
                Return Me.sessioneEmergenzaField
            End Get
            Set
                Me.sessioneEmergenzaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Lista() As String
            Get
                Return Me.listaField
            End Get
            Set
                Me.listaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Raccoglitore() As String
            Get
                Return Me.raccoglitoreField
            End Get
            Set
                Me.raccoglitoreField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ElencoRaccoglitore() As String
            Get
                Return Me.elencoRaccoglitoreField
            End Get
            Set
                Me.elencoRaccoglitoreField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Commento() As String
            Get
                Return Me.commentoField
            End Get
            Set
                Me.commentoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TipoDocumento() As String
            Get
                Return Me.tipoDocumentoField
            End Get
            Set
                Me.tipoDocumentoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DecodificaTipoDocumento() As String
            Get
                Return Me.decodificaTipoDocumentoField
            End Get
            Set
                Me.decodificaTipoDocumentoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NumeroDocumento() As String
            Get
                Return Me.numeroDocumentoField
            End Get
            Set
                Me.numeroDocumentoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Protocollo() As String
            Get
                Return Me.protocolloField
            End Get
            Set
                Me.protocolloField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AnnoProtocollo() As Integer
            Get
                Return Me.annoProtocolloField
            End Get
            Set
                Me.annoProtocolloField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NumeroPratica() As String
            Get
                Return Me.numeroPraticaField
            End Get
            Set
                Me.numeroPraticaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AnnoPratica() As String
            Get
                Return Me.annoPraticaField
            End Get
            Set
                Me.annoPraticaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataDocumento() As Date
            Get
                Return Me.dataDocumentoField
            End Get
            Set
                Me.dataDocumentoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataArchiviazione() As Date
            Get
                Return Me.dataArchiviazioneField
            End Get
            Set
                Me.dataArchiviazioneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataSpedizione() As Date
            Get
                Return Me.dataSpedizioneField
            End Get
            Set
                Me.dataSpedizioneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataRicezione() As Date
            Get
                Return Me.dataRicezioneField
            End Get
            Set
                Me.dataRicezioneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataScadenza() As Date
            Get
                Return Me.dataScadenzaField
            End Get
            Set
                Me.dataScadenzaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataRevisione() As Date
            Get
                Return Me.dataRevisioneField
            End Get
            Set
                Me.dataRevisioneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataFirma() As Date
            Get
                Return Me.dataFirmaField
            End Get
            Set
                Me.dataFirmaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataMasterizzazione() As Date
            Get
                Return Me.dataMasterizzazioneField
            End Get
            Set
                Me.dataMasterizzazioneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataProtocollo() As Date
            Get
                Return Me.dataProtocolloField
            End Get
            Set
                Me.dataProtocolloField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataModifica() As Date
            Get
                Return Me.dataModificaField
            End Get
            Set
                Me.dataModificaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DaCompletare() As Boolean
            Get
                Return Me.daCompletareField
            End Get
            Set
                Me.daCompletareField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Approvato() As Boolean
            Get
                Return Me.approvatoField
            End Get
            Set
                Me.approvatoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Rifiutato() As Boolean
            Get
                Return Me.rifiutatoField
            End Get
            Set
                Me.rifiutatoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Firmato() As Boolean
            Get
                Return Me.firmatoField
            End Get
            Set
                Me.firmatoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Marcato() As Boolean
            Get
                Return Me.marcatoField
            End Get
            Set
                Me.marcatoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Masterizzato() As Boolean
            Get
                Return Me.masterizzatoField
            End Get
            Set
                Me.masterizzatoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DaMasterizzare() As Boolean
            Get
                Return Me.daMasterizzareField
            End Get
            Set
                Me.daMasterizzareField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DaFirmare() As Boolean
            Get
                Return Me.daFirmareField
            End Get
            Set
                Me.daFirmareField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Criptato() As Boolean
            Get
                Return Me.criptatoField
            End Get
            Set
                Me.criptatoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Modificato() As Boolean
            Get
                Return Me.modificatoField
            End Get
            Set
                Me.modificatoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanView() As Boolean
            Get
                Return Me.canViewField
            End Get
            Set
                Me.canViewField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanAuthorize() As Boolean
            Get
                Return Me.canAuthorizeField
            End Get
            Set
                Me.canAuthorizeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanApprove() As Boolean
            Get
                Return Me.canApproveField
            End Get
            Set
                Me.canApproveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanEdit() As Boolean
            Get
                Return Me.canEditField
            End Get
            Set
                Me.canEditField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanDelete() As Boolean
            Get
                Return Me.canDeleteField
            End Get
            Set
                Me.canDeleteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanPrint() As Boolean
            Get
                Return Me.canPrintField
            End Get
            Set
                Me.canPrintField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanCreate() As Boolean
            Get
                Return Me.canCreateField
            End Get
            Set
                Me.canCreateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanAddImage() As Boolean
            Get
                Return Me.canAddImageField
            End Get
            Set
                Me.canAddImageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UtenteApprovatore() As String
            Get
                Return Me.utenteApprovatoreField
            End Get
            Set
                Me.utenteApprovatoreField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UtenteRevisore() As String
            Get
                Return Me.utenteRevisoreField
            End Get
            Set
                Me.utenteRevisoreField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UtenteFirma() As String
            Get
                Return Me.utenteFirmaField
            End Get
            Set
                Me.utenteFirmaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UtenteMarca() As String
            Get
                Return Me.utenteMarcaField
            End Get
            Set
                Me.utenteMarcaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UtenteMasterizzatore() As String
            Get
                Return Me.utenteMasterizzatoreField
            End Get
            Set
                Me.utenteMasterizzatoreField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Permessi() As Permessi
            Get
                Return Me.permessiField
            End Get
            Set
                Me.permessiField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Computer() As String
            Get
                Return Me.computerField
            End Get
            Set
                Me.computerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SerialeCD() As String
            Get
                Return Me.serialeCDField
            End Get
            Set
                Me.serialeCDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Impronta() As String
            Get
                Return Me.improntaField
            End Get
            Set
                Me.improntaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Kbyte() As Long
            Get
                Return Me.kbyteField
            End Get
            Set
                Me.kbyteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NumeroImmagini() As Integer
            Get
                Return Me.numeroImmaginiField
            End Get
            Set
                Me.numeroImmaginiField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TipoChiave() As String()
            Get
                Return Me.tipoChiaveField
            End Get
            Set
                Me.tipoChiaveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NomeChiave() As String()
            Get
                Return Me.nomeChiaveField
            End Get
            Set
                Me.nomeChiaveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ValoreChiave() As String()
            Get
                Return Me.valoreChiaveField
            End Get
            Set
                Me.valoreChiaveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LookupValoreChiave() As String()
            Get
                Return Me.lookupValoreChiaveField
            End Get
            Set
                Me.lookupValoreChiaveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RubricaMittente() As String
            Get
                Return Me.rubricaMittenteField
            End Get
            Set
                Me.rubricaMittenteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Mittente() As String
            Get
                Return Me.mittenteField
            End Get
            Set
                Me.mittenteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DestinatariInterni() As String
            Get
                Return Me.destinatariInterniField
            End Get
            Set
                Me.destinatariInterniField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DestinatariEsterni() As String
            Get
                Return Me.destinatariEsterniField
            End Get
            Set
                Me.destinatariEsterniField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DestinatariInterniUtenti() As String
            Get
                Return Me.destinatariInterniUtentiField
            End Get
            Set
                Me.destinatariInterniUtentiField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DestinatariInterniPC() As String
            Get
                Return Me.destinatariInterniPCField
            End Get
            Set
                Me.destinatariInterniPCField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DestinatariEsterniPC() As String
            Get
                Return Me.destinatariEsterniPCField
            End Get
            Set
                Me.destinatariEsterniPCField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DestinatariInterniUtentiPC() As String
            Get
                Return Me.destinatariInterniUtentiPCField
            End Get
            Set
                Me.destinatariInterniUtentiPCField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProtocolloEsterno() As String
            Get
                Return Me.protocolloEsternoField
            End Get
            Set
                Me.protocolloEsternoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataProtocolloEsterno() As Date
            Get
                Return Me.dataProtocolloEsternoField
            End Get
            Set
                Me.dataProtocolloEsternoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Filename() As String
            Get
                Return Me.filenameField
            End Get
            Set
                Me.filenameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Workflow() As String
            Get
                Return Me.workflowField
            End Get
            Set
                Me.workflowField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PassoWorkflow() As Integer
            Get
                Return Me.passoWorkflowField
            End Get
            Set
                Me.passoWorkflowField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Distribuzione() As String
            Get
                Return Me.distribuzioneField
            End Get
            Set
                Me.distribuzioneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Registro() As String
            Get
                Return Me.registroField
            End Get
            Set
                Me.registroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TipoContenuto() As ContentType
            Get
                Return Me.tipoContenutoField
            End Get
            Set
                Me.tipoContenutoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Firmatario() As String
            Get
                Return Me.firmatarioField
            End Get
            Set
                Me.firmatarioField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SoggettoFirmatario() As String
            Get
                Return Me.soggettoFirmatarioField
            End Get
            Set
                Me.soggettoFirmatarioField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://edoc.elmisoftware.com/images/")>  _
    Partial Public Class Revisione
        
        Private numeroField As Integer
        
        Private idField As Integer
        
        Private commentoField As String
        
        Private dataField As Date
        
        Private computerField As String
        
        Private utenteField As String
        
        Private serialeCDField As String
        
        Private cryptatoField As Boolean
        
        Private kByteField As Long
        
        Private improntaField As String
        
        Private filenameField As String
        
        Private speditoField As String
        
        Private firmatoField As String
        
        Private conservatoField As String
        
        '''<remarks/>
        Public Property Numero() As Integer
            Get
                Return Me.numeroField
            End Get
            Set
                Me.numeroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property id() As Integer
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Commento() As String
            Get
                Return Me.commentoField
            End Get
            Set
                Me.commentoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Data() As Date
            Get
                Return Me.dataField
            End Get
            Set
                Me.dataField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Computer() As String
            Get
                Return Me.computerField
            End Get
            Set
                Me.computerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Utente() As String
            Get
                Return Me.utenteField
            End Get
            Set
                Me.utenteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SerialeCD() As String
            Get
                Return Me.serialeCDField
            End Get
            Set
                Me.serialeCDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Cryptato() As Boolean
            Get
                Return Me.cryptatoField
            End Get
            Set
                Me.cryptatoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property KByte() As Long
            Get
                Return Me.kByteField
            End Get
            Set
                Me.kByteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Impronta() As String
            Get
                Return Me.improntaField
            End Get
            Set
                Me.improntaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Filename() As String
            Get
                Return Me.filenameField
            End Get
            Set
                Me.filenameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Spedito() As String
            Get
                Return Me.speditoField
            End Get
            Set
                Me.speditoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Firmato() As String
            Get
                Return Me.firmatoField
            End Get
            Set
                Me.firmatoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Conservato() As String
            Get
                Return Me.conservatoField
            End Get
            Set
                Me.conservatoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://edoc.elmisoftware.com/images/")>  _
    Partial Public Class KeyValuePairOfStringString
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://edoc.elmisoftware.com/images/")>  _
    Partial Public Class Permessi
        
        Private isGroupField As Boolean
        
        Private permissionTypeField As PermissionType
        
        Private canReadField As Boolean
        
        Private canEditField As Boolean
        
        Private canCreateField As Boolean
        
        Private canDeleteField As Boolean
        
        Private canApproveField As Boolean
        
        Private canAuthorizeField As Boolean
        
        Private canAddImageField As Boolean
        
        Private canCreateFolderField As Boolean
        
        Private canEditFolderField As Boolean
        
        Private canDeleteFolderField As Boolean
        
        Private canReceiveMailField As Boolean
        
        Private canShareField As Boolean
        
        Private canProtocolInField As Boolean
        
        Private canProtocolOutField As Boolean
        
        Private canProtocolInternalField As Boolean
        
        Private canViewUpField As Boolean
        
        Private canViewDownField As Boolean
        
        Private canViewBrothersField As Boolean
        
        Private canSendField As Boolean
        
        Private canViewLogField As Boolean
        
        Private canRemoveImageField As Boolean
        
        Private cannotReadField As Boolean
        
        Private cannotEditField As Boolean
        
        Private cannotCreateField As Boolean
        
        Private cannotDeleteField As Boolean
        
        Private cannotApproveField As Boolean
        
        Private cannotAuthorizeField As Boolean
        
        Private cannotAddImageField As Boolean
        
        Private cannotCreateFolderField As Boolean
        
        Private cannotEditFolderField As Boolean
        
        Private cannotDeleteFolderField As Boolean
        
        Private cannotReceiveMailField As Boolean
        
        Private cannotShareField As Boolean
        
        Private cannotProtocolInField As Boolean
        
        Private cannotProtocolOutField As Boolean
        
        Private cannotProtocolInternalField As Boolean
        
        Private cannotViewUpField As Boolean
        
        Private cannotViewDownField As Boolean
        
        Private cannotViewBrothersField As Boolean
        
        Private cannotSendField As Boolean
        
        Private cannotViewLogField As Boolean
        
        Private cannotRemoveImageField As Boolean
        
        Private userNameField As String
        
        '''<remarks/>
        Public Property IsGroup() As Boolean
            Get
                Return Me.isGroupField
            End Get
            Set
                Me.isGroupField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PermissionType() As PermissionType
            Get
                Return Me.permissionTypeField
            End Get
            Set
                Me.permissionTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanRead() As Boolean
            Get
                Return Me.canReadField
            End Get
            Set
                Me.canReadField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanEdit() As Boolean
            Get
                Return Me.canEditField
            End Get
            Set
                Me.canEditField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanCreate() As Boolean
            Get
                Return Me.canCreateField
            End Get
            Set
                Me.canCreateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanDelete() As Boolean
            Get
                Return Me.canDeleteField
            End Get
            Set
                Me.canDeleteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanApprove() As Boolean
            Get
                Return Me.canApproveField
            End Get
            Set
                Me.canApproveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanAuthorize() As Boolean
            Get
                Return Me.canAuthorizeField
            End Get
            Set
                Me.canAuthorizeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanAddImage() As Boolean
            Get
                Return Me.canAddImageField
            End Get
            Set
                Me.canAddImageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanCreateFolder() As Boolean
            Get
                Return Me.canCreateFolderField
            End Get
            Set
                Me.canCreateFolderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanEditFolder() As Boolean
            Get
                Return Me.canEditFolderField
            End Get
            Set
                Me.canEditFolderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanDeleteFolder() As Boolean
            Get
                Return Me.canDeleteFolderField
            End Get
            Set
                Me.canDeleteFolderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanReceiveMail() As Boolean
            Get
                Return Me.canReceiveMailField
            End Get
            Set
                Me.canReceiveMailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanShare() As Boolean
            Get
                Return Me.canShareField
            End Get
            Set
                Me.canShareField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanProtocolIn() As Boolean
            Get
                Return Me.canProtocolInField
            End Get
            Set
                Me.canProtocolInField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanProtocolOut() As Boolean
            Get
                Return Me.canProtocolOutField
            End Get
            Set
                Me.canProtocolOutField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanProtocolInternal() As Boolean
            Get
                Return Me.canProtocolInternalField
            End Get
            Set
                Me.canProtocolInternalField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanViewUp() As Boolean
            Get
                Return Me.canViewUpField
            End Get
            Set
                Me.canViewUpField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanViewDown() As Boolean
            Get
                Return Me.canViewDownField
            End Get
            Set
                Me.canViewDownField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanViewBrothers() As Boolean
            Get
                Return Me.canViewBrothersField
            End Get
            Set
                Me.canViewBrothersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanSend() As Boolean
            Get
                Return Me.canSendField
            End Get
            Set
                Me.canSendField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanViewLog() As Boolean
            Get
                Return Me.canViewLogField
            End Get
            Set
                Me.canViewLogField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanRemoveImage() As Boolean
            Get
                Return Me.canRemoveImageField
            End Get
            Set
                Me.canRemoveImageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotRead() As Boolean
            Get
                Return Me.cannotReadField
            End Get
            Set
                Me.cannotReadField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotEdit() As Boolean
            Get
                Return Me.cannotEditField
            End Get
            Set
                Me.cannotEditField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotCreate() As Boolean
            Get
                Return Me.cannotCreateField
            End Get
            Set
                Me.cannotCreateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotDelete() As Boolean
            Get
                Return Me.cannotDeleteField
            End Get
            Set
                Me.cannotDeleteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotApprove() As Boolean
            Get
                Return Me.cannotApproveField
            End Get
            Set
                Me.cannotApproveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotAuthorize() As Boolean
            Get
                Return Me.cannotAuthorizeField
            End Get
            Set
                Me.cannotAuthorizeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotAddImage() As Boolean
            Get
                Return Me.cannotAddImageField
            End Get
            Set
                Me.cannotAddImageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotCreateFolder() As Boolean
            Get
                Return Me.cannotCreateFolderField
            End Get
            Set
                Me.cannotCreateFolderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotEditFolder() As Boolean
            Get
                Return Me.cannotEditFolderField
            End Get
            Set
                Me.cannotEditFolderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotDeleteFolder() As Boolean
            Get
                Return Me.cannotDeleteFolderField
            End Get
            Set
                Me.cannotDeleteFolderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotReceiveMail() As Boolean
            Get
                Return Me.cannotReceiveMailField
            End Get
            Set
                Me.cannotReceiveMailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotShare() As Boolean
            Get
                Return Me.cannotShareField
            End Get
            Set
                Me.cannotShareField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotProtocolIn() As Boolean
            Get
                Return Me.cannotProtocolInField
            End Get
            Set
                Me.cannotProtocolInField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotProtocolOut() As Boolean
            Get
                Return Me.cannotProtocolOutField
            End Get
            Set
                Me.cannotProtocolOutField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotProtocolInternal() As Boolean
            Get
                Return Me.cannotProtocolInternalField
            End Get
            Set
                Me.cannotProtocolInternalField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotViewUp() As Boolean
            Get
                Return Me.cannotViewUpField
            End Get
            Set
                Me.cannotViewUpField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotViewDown() As Boolean
            Get
                Return Me.cannotViewDownField
            End Get
            Set
                Me.cannotViewDownField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotViewBrothers() As Boolean
            Get
                Return Me.cannotViewBrothersField
            End Get
            Set
                Me.cannotViewBrothersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotSend() As Boolean
            Get
                Return Me.cannotSendField
            End Get
            Set
                Me.cannotSendField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotViewLog() As Boolean
            Get
                Return Me.cannotViewLogField
            End Get
            Set
                Me.cannotViewLogField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotRemoveImage() As Boolean
            Get
                Return Me.cannotRemoveImageField
            End Get
            Set
                Me.cannotRemoveImageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserName() As String
            Get
                Return Me.userNameField
            End Get
            Set
                Me.userNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://edoc.elmisoftware.com/images/")>  _
    Public Enum PermissionType
        
        '''<remarks/>
        User
        
        '''<remarks/>
        Group
        
        '''<remarks/>
        Contact
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://edoc.elmisoftware.com/images/")>  _
    Partial Public Class DocumentTag
        
        Private tagTypeField As String
        
        Private tagNameField As String
        
        Private tagValueField As String
        
        Private tagLookupValueField As String
        
        Private tagDefaultValueField As String
        
        Private tagInputMaskField As String
        
        Private indexField As Integer
        
        Private requiredField As Boolean
        
        Private editableField As Boolean
        
        Private additionalDataField() As String
        
        '''<remarks/>
        Public Property TagType() As String
            Get
                Return Me.tagTypeField
            End Get
            Set
                Me.tagTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TagName() As String
            Get
                Return Me.tagNameField
            End Get
            Set
                Me.tagNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TagValue() As String
            Get
                Return Me.tagValueField
            End Get
            Set
                Me.tagValueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TagLookupValue() As String
            Get
                Return Me.tagLookupValueField
            End Get
            Set
                Me.tagLookupValueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TagDefaultValue() As String
            Get
                Return Me.tagDefaultValueField
            End Get
            Set
                Me.tagDefaultValueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TagInputMask() As String
            Get
                Return Me.tagInputMaskField
            End Get
            Set
                Me.tagInputMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Index() As Integer
            Get
                Return Me.indexField
            End Get
            Set
                Me.indexField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Required() As Boolean
            Get
                Return Me.requiredField
            End Get
            Set
                Me.requiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Editable() As Boolean
            Get
                Return Me.editableField
            End Get
            Set
                Me.editableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AdditionalData() As String()
            Get
                Return Me.additionalDataField
            End Get
            Set
                Me.additionalDataField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://edoc.elmisoftware.com/images/")>  _
    Public Enum StatusType
        
        '''<remarks/>
        Active
        
        '''<remarks/>
        Suspended
        
        '''<remarks/>
        Closed
        
        '''<remarks/>
        Aborted
        
        '''<remarks/>
        Deleted
        
        '''<remarks/>
        Draft
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://edoc.elmisoftware.com/images/")>  _
    Public Enum ContentType
        
        '''<remarks/>
        Document
        
        '''<remarks/>
        Folder
        
        '''<remarks/>
        Dossier
        
        '''<remarks/>
        Template
        
        '''<remarks/>
        Any
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DownloadCompletedEventHandler(ByVal sender As Object, ByVal e As DownloadCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DownloadCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Image() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property file() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SignHashCompletedEventHandler(ByVal sender As Object, ByVal e As SignHashCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SignHashCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SignCompletedEventHandler(ByVal sender As Object, ByVal e As SignCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SignCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub HackSignCompletedEventHandler(ByVal sender As Object, ByVal e As HackSignCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class HackSignCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub LogonCompletedEventHandler(ByVal sender As Object, ByVal e As LogonCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LogonCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub LogOnUserCompletedEventHandler(ByVal sender As Object, ByVal e As LogOnUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LogOnUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateCompletedEventHandler(ByVal sender As Object, ByVal e As CreateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub UploadCompletedEventHandler(ByVal sender As Object, ByVal e As UploadCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UploadCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SaveCompletedEventHandler(ByVal sender As Object, ByVal e As SaveCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub AbortCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub UploadGDDCompletedEventHandler(ByVal sender As Object, ByVal e As UploadGDDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UploadGDDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Err() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteDocumentoCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteDocumentoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteDocumentoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetLastImageDocumentoCompletedEventHandler(ByVal sender As Object, ByVal e As GetLastImageDocumentoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLastImageDocumentoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property file() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetDocumentoCompletedEventHandler(ByVal sender As Object, ByVal e As GetDocumentoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDocumentoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Documento
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Documento)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetTemplateCompletedEventHandler(ByVal sender As Object, ByVal e As GetTemplateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTemplateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ProcessDocumentCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateTempfileCompletedEventHandler(ByVal sender As Object, ByVal e As CreateTempfileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateTempfileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetHashFileCompletedEventHandler(ByVal sender As Object, ByVal e As GetHashFileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetHashFileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetFileCompletedEventHandler(ByVal sender As Object, ByVal e As GetFileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseHashFileCompletedEventHandler(ByVal sender As Object, ByVal e As CloseHashFileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CloseHashFileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseFileCompletedEventHandler(ByVal sender As Object, ByVal e As CloseFileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CloseFileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSignerInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetSignerInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSignerInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As KeyValuePairOfStringString()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),KeyValuePairOfStringString())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub MoveDocumentCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
End Namespace
