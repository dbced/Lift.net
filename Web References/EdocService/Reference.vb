'------------------------------------------------------------------------------
' <auto-generated>
'     Il codice è stato generato da uno strumento.
'     Versione runtime:4.0.30319.42000
'
'     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
'     il codice viene rigenerato.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Il codice sorgente è stato generato automaticamente da Microsoft.VSDesigner, versione 4.0.30319.42000.
'
Namespace EdocService
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="ServiceSoap", [Namespace]:="http://www.elmisoftware.com/")>  _
    Partial Public Class Service
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private LoginOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LogOnOperationCompleted As System.Threading.SendOrPostCallback
        
        Private loginIDValueField As LoginID
        
        Private LogOnUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getSameUserInRubricaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRealUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getUtenteMailByNomeAndDominioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getElencoUtentiMailByDominioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private IsTokenValidOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFilenameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFileDateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFileSizeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddPostItOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeletePostItOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPostItOperationCompleted As System.Threading.SendOrPostCallback
        
        Private HasPostItOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ElencoBancheDatiOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DettaglioBancaDatiOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ElencoTipiDocumentoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ProprietaTipoDocumentoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TipologiaDocumentoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ElencoTitolariOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreaTitolarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SerialNumberKeyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private IsSerialNumberValidOperationCompleted As System.Threading.SendOrPostCallback
        
        Private IsSerialNumberExpiredOperationCompleted As System.Threading.SendOrPostCallback
        
        Private IsSerialNumberNotPresentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InstallationIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ActiveProductOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DecodificaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ValoriChiaveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ElencoChiaviOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TagTypeFieldsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEditUrlOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLabelOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NewEmergencySessionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ProprietaDocumentoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddImageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetImageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CalcolaHashOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RevisioniDocumentoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ElencoCorrelatiOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FirmaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MasterizzaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteDocumentoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UploadGDDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NewImageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddToNewImageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConfirmNewImageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getFavoritesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getReceivedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getReceivedCCOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NextLottoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UltimoProtocolloOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ProtocolliOperationCompleted As System.Threading.SendOrPostCallback
        
        Private _RubricheOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VociRubricaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private xxxxCambiaStatoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetImmagineOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SalvaGDDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ProtocollaGDDFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetImageFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SignHashOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetHashOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FusioneOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ElencoTODOsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTODOOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDocumentSchemaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UserNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.LiftCore.My.MySettings.Default.LiftCore_EdocService_Service
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Property LoginIDValue() As LoginID
            Get
                Return Me.loginIDValueField
            End Get
            Set
                Me.loginIDValueField = value
            End Set
        End Property
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event LoginCompleted As LoginCompletedEventHandler
        
        '''<remarks/>
        Public Event LogOnCompleted As LogOnCompletedEventHandler
        
        '''<remarks/>
        Public Event LogOnUserCompleted As LogOnUserCompletedEventHandler
        
        '''<remarks/>
        Public Event getSameUserInRubricaCompleted As getSameUserInRubricaCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRealUserCompleted As GetRealUserCompletedEventHandler
        
        '''<remarks/>
        Public Event getUtenteMailByNomeAndDominioCompleted As getUtenteMailByNomeAndDominioCompletedEventHandler
        
        '''<remarks/>
        Public Event getElencoUtentiMailByDominioCompleted As getElencoUtentiMailByDominioCompletedEventHandler
        
        '''<remarks/>
        Public Event IsTokenValidCompleted As IsTokenValidCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFilenameCompleted As GetFilenameCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFileCompleted As GetFileCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFileDateCompleted As GetFileDateCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFileSizeCompleted As GetFileSizeCompletedEventHandler
        
        '''<remarks/>
        Public Event AddPostItCompleted As AddPostItCompletedEventHandler
        
        '''<remarks/>
        Public Event DeletePostItCompleted As DeletePostItCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPostItCompleted As GetPostItCompletedEventHandler
        
        '''<remarks/>
        Public Event HasPostItCompleted As HasPostItCompletedEventHandler
        
        '''<remarks/>
        Public Event ElencoBancheDatiCompleted As ElencoBancheDatiCompletedEventHandler
        
        '''<remarks/>
        Public Event DettaglioBancaDatiCompleted As DettaglioBancaDatiCompletedEventHandler
        
        '''<remarks/>
        Public Event ElencoTipiDocumentoCompleted As ElencoTipiDocumentoCompletedEventHandler
        
        '''<remarks/>
        Public Event ProprietaTipoDocumentoCompleted As ProprietaTipoDocumentoCompletedEventHandler
        
        '''<remarks/>
        Public Event TipologiaDocumentoCompleted As TipologiaDocumentoCompletedEventHandler
        
        '''<remarks/>
        Public Event ElencoTitolariCompleted As ElencoTitolariCompletedEventHandler
        
        '''<remarks/>
        Public Event CreaTitolarioCompleted As CreaTitolarioCompletedEventHandler
        
        '''<remarks/>
        Public Event SerialNumberKeyCompleted As SerialNumberKeyCompletedEventHandler
        
        '''<remarks/>
        Public Event IsSerialNumberValidCompleted As IsSerialNumberValidCompletedEventHandler
        
        '''<remarks/>
        Public Event IsSerialNumberExpiredCompleted As IsSerialNumberExpiredCompletedEventHandler
        
        '''<remarks/>
        Public Event IsSerialNumberNotPresentCompleted As IsSerialNumberNotPresentCompletedEventHandler
        
        '''<remarks/>
        Public Event InstallationIDCompleted As InstallationIDCompletedEventHandler
        
        '''<remarks/>
        Public Event ActiveProductCompleted As ActiveProductCompletedEventHandler
        
        '''<remarks/>
        Public Event DecodificaCompleted As DecodificaCompletedEventHandler
        
        '''<remarks/>
        Public Event ValoriChiaveCompleted As ValoriChiaveCompletedEventHandler
        
        '''<remarks/>
        Public Event ElencoChiaviCompleted As ElencoChiaviCompletedEventHandler
        
        '''<remarks/>
        Public Event TagTypeFieldsCompleted As TagTypeFieldsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEditUrlCompleted As GetEditUrlCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLabelCompleted As GetLabelCompletedEventHandler
        
        '''<remarks/>
        Public Event NewEmergencySessionCompleted As NewEmergencySessionCompletedEventHandler
        
        '''<remarks/>
        Public Event ProprietaDocumentoCompleted As ProprietaDocumentoCompletedEventHandler
        
        '''<remarks/>
        Public Event SaveCompleted As SaveCompletedEventHandler
        
        '''<remarks/>
        Public Event AddImageCompleted As AddImageCompletedEventHandler
        
        '''<remarks/>
        Public Event GetImageCompleted As GetImageCompletedEventHandler
        
        '''<remarks/>
        Public Event CalcolaHashCompleted As CalcolaHashCompletedEventHandler
        
        '''<remarks/>
        Public Event RevisioniDocumentoCompleted As RevisioniDocumentoCompletedEventHandler
        
        '''<remarks/>
        Public Event ElencoCorrelatiCompleted As ElencoCorrelatiCompletedEventHandler
        
        '''<remarks/>
        Public Event FirmaCompleted As FirmaCompletedEventHandler
        
        '''<remarks/>
        Public Event MasterizzaCompleted As MasterizzaCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteDocumentoCompleted As DeleteDocumentoCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateFileCompleted As UpdateFileCompletedEventHandler
        
        '''<remarks/>
        Public Event UploadGDDCompleted As UploadGDDCompletedEventHandler
        
        '''<remarks/>
        Public Event FindCompleted As FindCompletedEventHandler
        
        '''<remarks/>
        Public Event NewImageCompleted As NewImageCompletedEventHandler
        
        '''<remarks/>
        Public Event AddToNewImageCompleted As AddToNewImageCompletedEventHandler
        
        '''<remarks/>
        Public Event ConfirmNewImageCompleted As ConfirmNewImageCompletedEventHandler
        
        '''<remarks/>
        Public Event getFavoritesCompleted As getFavoritesCompletedEventHandler
        
        '''<remarks/>
        Public Event getReceivedCompleted As getReceivedCompletedEventHandler
        
        '''<remarks/>
        Public Event getReceivedCCCompleted As getReceivedCCCompletedEventHandler
        
        '''<remarks/>
        Public Event NextLottoCompleted As NextLottoCompletedEventHandler
        
        '''<remarks/>
        Public Event UltimoProtocolloCompleted As UltimoProtocolloCompletedEventHandler
        
        '''<remarks/>
        Public Event ProtocolliCompleted As ProtocolliCompletedEventHandler
        
        '''<remarks/>
        Public Event _RubricheCompleted As _RubricheCompletedEventHandler
        
        '''<remarks/>
        Public Event VociRubricaCompleted As VociRubricaCompletedEventHandler
        
        '''<remarks/>
        Public Event xxxxCambiaStatoCompleted As xxxxCambiaStatoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetImmagineCompleted As GetImmagineCompletedEventHandler
        
        '''<remarks/>
        Public Event SalvaGDDCompleted As SalvaGDDCompletedEventHandler
        
        '''<remarks/>
        Public Event ProtocollaGDDFileCompleted As ProtocollaGDDFileCompletedEventHandler
        
        '''<remarks/>
        Public Event GetImageFileCompleted As GetImageFileCompletedEventHandler
        
        '''<remarks/>
        Public Event SignHashCompleted As SignHashCompletedEventHandler
        
        '''<remarks/>
        Public Event GetHashCompleted As GetHashCompletedEventHandler
        
        '''<remarks/>
        Public Event FusioneCompleted As FusioneCompletedEventHandler
        
        '''<remarks/>
        Public Event ElencoTODOsCompleted As ElencoTODOsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmailCompleted As GetEmailCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTODOCompleted As GetTODOCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDocumentSchemaCompleted As GetDocumentSchemaCompletedEventHandler
        
        '''<remarks/>
        Public Event UserNameCompleted As UserNameCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/Login", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Login(ByVal username As String, ByVal password As String) As String
            Dim results() As Object = Me.Invoke("Login", New Object() {username, password})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoginAsync(ByVal username As String, ByVal password As String)
            Me.LoginAsync(username, password, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoginAsync(ByVal username As String, ByVal password As String, ByVal userState As Object)
            If (Me.LoginOperationCompleted Is Nothing) Then
                Me.LoginOperationCompleted = AddressOf Me.OnLoginOperationCompleted
            End If
            Me.InvokeAsync("Login", New Object() {username, password}, Me.LoginOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoginOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoginCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoginCompleted(Me, New LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/LogOn", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LogOn(ByVal username As String) As String
            Dim results() As Object = Me.Invoke("LogOn", New Object() {username})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LogOnAsync(ByVal username As String)
            Me.LogOnAsync(username, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LogOnAsync(ByVal username As String, ByVal userState As Object)
            If (Me.LogOnOperationCompleted Is Nothing) Then
                Me.LogOnOperationCompleted = AddressOf Me.OnLogOnOperationCompleted
            End If
            Me.InvokeAsync("LogOn", New Object() {username}, Me.LogOnOperationCompleted, userState)
        End Sub
        
        Private Sub OnLogOnOperationCompleted(ByVal arg As Object)
            If (Not (Me.LogOnCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LogOnCompleted(Me, New LogOnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/LogOnUser", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LogOnUser(ByVal user As String) As String
            Dim results() As Object = Me.Invoke("LogOnUser", New Object() {user})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LogOnUserAsync(ByVal user As String)
            Me.LogOnUserAsync(user, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LogOnUserAsync(ByVal user As String, ByVal userState As Object)
            If (Me.LogOnUserOperationCompleted Is Nothing) Then
                Me.LogOnUserOperationCompleted = AddressOf Me.OnLogOnUserOperationCompleted
            End If
            Me.InvokeAsync("LogOnUser", New Object() {user}, Me.LogOnUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnLogOnUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.LogOnUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LogOnUserCompleted(Me, New LogOnUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/getSameUserInRubrica", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub getSameUserInRubrica(ByVal user As String, ByRef Ute As String, ByRef Tipo As String)
            Dim results() As Object = Me.Invoke("getSameUserInRubrica", New Object() {user, Ute, Tipo})
            Ute = CType(results(0),String)
            Tipo = CType(results(1),String)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getSameUserInRubricaAsync(ByVal user As String, ByVal Ute As String, ByVal Tipo As String)
            Me.getSameUserInRubricaAsync(user, Ute, Tipo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getSameUserInRubricaAsync(ByVal user As String, ByVal Ute As String, ByVal Tipo As String, ByVal userState As Object)
            If (Me.getSameUserInRubricaOperationCompleted Is Nothing) Then
                Me.getSameUserInRubricaOperationCompleted = AddressOf Me.OngetSameUserInRubricaOperationCompleted
            End If
            Me.InvokeAsync("getSameUserInRubrica", New Object() {user, Ute, Tipo}, Me.getSameUserInRubricaOperationCompleted, userState)
        End Sub
        
        Private Sub OngetSameUserInRubricaOperationCompleted(ByVal arg As Object)
            If (Not (Me.getSameUserInRubricaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getSameUserInRubricaCompleted(Me, New getSameUserInRubricaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/GetRealUser", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRealUser(ByVal username As String) As String
            Dim results() As Object = Me.Invoke("GetRealUser", New Object() {username})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRealUserAsync(ByVal username As String)
            Me.GetRealUserAsync(username, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRealUserAsync(ByVal username As String, ByVal userState As Object)
            If (Me.GetRealUserOperationCompleted Is Nothing) Then
                Me.GetRealUserOperationCompleted = AddressOf Me.OnGetRealUserOperationCompleted
            End If
            Me.InvokeAsync("GetRealUser", New Object() {username}, Me.GetRealUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRealUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRealUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRealUserCompleted(Me, New GetRealUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/getUtenteMailByNomeAndDominio", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getUtenteMailByNomeAndDominio(ByVal userName As String, ByVal dominio As String) As UtenteMail
            Dim results() As Object = Me.Invoke("getUtenteMailByNomeAndDominio", New Object() {userName, dominio})
            Return CType(results(0),UtenteMail)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getUtenteMailByNomeAndDominioAsync(ByVal userName As String, ByVal dominio As String)
            Me.getUtenteMailByNomeAndDominioAsync(userName, dominio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getUtenteMailByNomeAndDominioAsync(ByVal userName As String, ByVal dominio As String, ByVal userState As Object)
            If (Me.getUtenteMailByNomeAndDominioOperationCompleted Is Nothing) Then
                Me.getUtenteMailByNomeAndDominioOperationCompleted = AddressOf Me.OngetUtenteMailByNomeAndDominioOperationCompleted
            End If
            Me.InvokeAsync("getUtenteMailByNomeAndDominio", New Object() {userName, dominio}, Me.getUtenteMailByNomeAndDominioOperationCompleted, userState)
        End Sub
        
        Private Sub OngetUtenteMailByNomeAndDominioOperationCompleted(ByVal arg As Object)
            If (Not (Me.getUtenteMailByNomeAndDominioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getUtenteMailByNomeAndDominioCompleted(Me, New getUtenteMailByNomeAndDominioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/getElencoUtentiMailByDominio", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getElencoUtentiMailByDominio(ByVal dominio As String) As <System.Xml.Serialization.XmlArrayItemAttribute(IsNullable:=false)> UtenteMail()
            Dim results() As Object = Me.Invoke("getElencoUtentiMailByDominio", New Object() {dominio})
            Return CType(results(0),UtenteMail())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getElencoUtentiMailByDominioAsync(ByVal dominio As String)
            Me.getElencoUtentiMailByDominioAsync(dominio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getElencoUtentiMailByDominioAsync(ByVal dominio As String, ByVal userState As Object)
            If (Me.getElencoUtentiMailByDominioOperationCompleted Is Nothing) Then
                Me.getElencoUtentiMailByDominioOperationCompleted = AddressOf Me.OngetElencoUtentiMailByDominioOperationCompleted
            End If
            Me.InvokeAsync("getElencoUtentiMailByDominio", New Object() {dominio}, Me.getElencoUtentiMailByDominioOperationCompleted, userState)
        End Sub
        
        Private Sub OngetElencoUtentiMailByDominioOperationCompleted(ByVal arg As Object)
            If (Not (Me.getElencoUtentiMailByDominioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getElencoUtentiMailByDominioCompleted(Me, New getElencoUtentiMailByDominioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/IsTokenValid", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function IsTokenValid() As Boolean
            Dim results() As Object = Me.Invoke("IsTokenValid", New Object(-1) {})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub IsTokenValidAsync()
            Me.IsTokenValidAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub IsTokenValidAsync(ByVal userState As Object)
            If (Me.IsTokenValidOperationCompleted Is Nothing) Then
                Me.IsTokenValidOperationCompleted = AddressOf Me.OnIsTokenValidOperationCompleted
            End If
            Me.InvokeAsync("IsTokenValid", New Object(-1) {}, Me.IsTokenValidOperationCompleted, userState)
        End Sub
        
        Private Sub OnIsTokenValidOperationCompleted(ByVal arg As Object)
            If (Not (Me.IsTokenValidCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent IsTokenValidCompleted(Me, New IsTokenValidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/GetFilename", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFilename(ByVal Doc As String, ByVal codice As String, ByVal Prot As String) As String
            Dim results() As Object = Me.Invoke("GetFilename", New Object() {Doc, codice, Prot})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFilenameAsync(ByVal Doc As String, ByVal codice As String, ByVal Prot As String)
            Me.GetFilenameAsync(Doc, codice, Prot, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFilenameAsync(ByVal Doc As String, ByVal codice As String, ByVal Prot As String, ByVal userState As Object)
            If (Me.GetFilenameOperationCompleted Is Nothing) Then
                Me.GetFilenameOperationCompleted = AddressOf Me.OnGetFilenameOperationCompleted
            End If
            Me.InvokeAsync("GetFilename", New Object() {Doc, codice, Prot}, Me.GetFilenameOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFilenameOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFilenameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFilenameCompleted(Me, New GetFilenameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/GetFile", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFile(ByVal Filename As String) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("GetFile", New Object() {Filename})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFileAsync(ByVal Filename As String)
            Me.GetFileAsync(Filename, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFileAsync(ByVal Filename As String, ByVal userState As Object)
            If (Me.GetFileOperationCompleted Is Nothing) Then
                Me.GetFileOperationCompleted = AddressOf Me.OnGetFileOperationCompleted
            End If
            Me.InvokeAsync("GetFile", New Object() {Filename}, Me.GetFileOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFileCompleted(Me, New GetFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/GetFileDate", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFileDate(ByVal Filename As String) As Date
            Dim results() As Object = Me.Invoke("GetFileDate", New Object() {Filename})
            Return CType(results(0),Date)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFileDateAsync(ByVal Filename As String)
            Me.GetFileDateAsync(Filename, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFileDateAsync(ByVal Filename As String, ByVal userState As Object)
            If (Me.GetFileDateOperationCompleted Is Nothing) Then
                Me.GetFileDateOperationCompleted = AddressOf Me.OnGetFileDateOperationCompleted
            End If
            Me.InvokeAsync("GetFileDate", New Object() {Filename}, Me.GetFileDateOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFileDateOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFileDateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFileDateCompleted(Me, New GetFileDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/GetFileSize", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFileSize(ByVal Filename As String) As Long
            Dim results() As Object = Me.Invoke("GetFileSize", New Object() {Filename})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFileSizeAsync(ByVal Filename As String)
            Me.GetFileSizeAsync(Filename, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFileSizeAsync(ByVal Filename As String, ByVal userState As Object)
            If (Me.GetFileSizeOperationCompleted Is Nothing) Then
                Me.GetFileSizeOperationCompleted = AddressOf Me.OnGetFileSizeOperationCompleted
            End If
            Me.InvokeAsync("GetFileSize", New Object() {Filename}, Me.GetFileSizeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFileSizeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFileSizeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFileSizeCompleted(Me, New GetFileSizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/AddPostIt", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub AddPostIt(ByVal codice As String, ByVal doc As Integer, ByVal nota As String, ByVal isPrivate As Boolean)
            Me.Invoke("AddPostIt", New Object() {codice, doc, nota, isPrivate})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddPostItAsync(ByVal codice As String, ByVal doc As Integer, ByVal nota As String, ByVal isPrivate As Boolean)
            Me.AddPostItAsync(codice, doc, nota, isPrivate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddPostItAsync(ByVal codice As String, ByVal doc As Integer, ByVal nota As String, ByVal isPrivate As Boolean, ByVal userState As Object)
            If (Me.AddPostItOperationCompleted Is Nothing) Then
                Me.AddPostItOperationCompleted = AddressOf Me.OnAddPostItOperationCompleted
            End If
            Me.InvokeAsync("AddPostIt", New Object() {codice, doc, nota, isPrivate}, Me.AddPostItOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddPostItOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddPostItCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddPostItCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/DeletePostIt", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeletePostIt(ByVal codice As String, ByVal id As Integer)
            Me.Invoke("DeletePostIt", New Object() {codice, id})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeletePostItAsync(ByVal codice As String, ByVal id As Integer)
            Me.DeletePostItAsync(codice, id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeletePostItAsync(ByVal codice As String, ByVal id As Integer, ByVal userState As Object)
            If (Me.DeletePostItOperationCompleted Is Nothing) Then
                Me.DeletePostItOperationCompleted = AddressOf Me.OnDeletePostItOperationCompleted
            End If
            Me.InvokeAsync("DeletePostIt", New Object() {codice, id}, Me.DeletePostItOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeletePostItOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeletePostItCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeletePostItCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/GetPostIt", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPostIt(ByVal codice As String, ByVal doc As Integer) As Post_IT()
            Dim results() As Object = Me.Invoke("GetPostIt", New Object() {codice, doc})
            Return CType(results(0),Post_IT())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPostItAsync(ByVal codice As String, ByVal doc As Integer)
            Me.GetPostItAsync(codice, doc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPostItAsync(ByVal codice As String, ByVal doc As Integer, ByVal userState As Object)
            If (Me.GetPostItOperationCompleted Is Nothing) Then
                Me.GetPostItOperationCompleted = AddressOf Me.OnGetPostItOperationCompleted
            End If
            Me.InvokeAsync("GetPostIt", New Object() {codice, doc}, Me.GetPostItOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPostItOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPostItCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPostItCompleted(Me, New GetPostItCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/HasPostIt", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function HasPostIt(ByVal codice As String, ByVal doc As Integer) As Integer
            Dim results() As Object = Me.Invoke("HasPostIt", New Object() {codice, doc})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub HasPostItAsync(ByVal codice As String, ByVal doc As Integer)
            Me.HasPostItAsync(codice, doc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub HasPostItAsync(ByVal codice As String, ByVal doc As Integer, ByVal userState As Object)
            If (Me.HasPostItOperationCompleted Is Nothing) Then
                Me.HasPostItOperationCompleted = AddressOf Me.OnHasPostItOperationCompleted
            End If
            Me.InvokeAsync("HasPostIt", New Object() {codice, doc}, Me.HasPostItOperationCompleted, userState)
        End Sub
        
        Private Sub OnHasPostItOperationCompleted(ByVal arg As Object)
            If (Not (Me.HasPostItCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent HasPostItCompleted(Me, New HasPostItCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/ElencoBancheDati", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ElencoBancheDati() As <System.Xml.Serialization.XmlArrayItemAttribute(IsNullable:=false)> BancaDati()
            Dim results() As Object = Me.Invoke("ElencoBancheDati", New Object(-1) {})
            Return CType(results(0),BancaDati())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ElencoBancheDatiAsync()
            Me.ElencoBancheDatiAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ElencoBancheDatiAsync(ByVal userState As Object)
            If (Me.ElencoBancheDatiOperationCompleted Is Nothing) Then
                Me.ElencoBancheDatiOperationCompleted = AddressOf Me.OnElencoBancheDatiOperationCompleted
            End If
            Me.InvokeAsync("ElencoBancheDati", New Object(-1) {}, Me.ElencoBancheDatiOperationCompleted, userState)
        End Sub
        
        Private Sub OnElencoBancheDatiOperationCompleted(ByVal arg As Object)
            If (Not (Me.ElencoBancheDatiCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ElencoBancheDatiCompleted(Me, New ElencoBancheDatiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/DettaglioBancaDati", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DettaglioBancaDati(ByVal codice As String) As BancaDati
            Dim results() As Object = Me.Invoke("DettaglioBancaDati", New Object() {codice})
            Return CType(results(0),BancaDati)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DettaglioBancaDatiAsync(ByVal codice As String)
            Me.DettaglioBancaDatiAsync(codice, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DettaglioBancaDatiAsync(ByVal codice As String, ByVal userState As Object)
            If (Me.DettaglioBancaDatiOperationCompleted Is Nothing) Then
                Me.DettaglioBancaDatiOperationCompleted = AddressOf Me.OnDettaglioBancaDatiOperationCompleted
            End If
            Me.InvokeAsync("DettaglioBancaDati", New Object() {codice}, Me.DettaglioBancaDatiOperationCompleted, userState)
        End Sub
        
        Private Sub OnDettaglioBancaDatiOperationCompleted(ByVal arg As Object)
            If (Not (Me.DettaglioBancaDatiCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DettaglioBancaDatiCompleted(Me, New DettaglioBancaDatiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/ElencoTipiDocumento", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ElencoTipiDocumento(ByVal codice As String) As TipoDocumento()
            Dim results() As Object = Me.Invoke("ElencoTipiDocumento", New Object() {codice})
            Return CType(results(0),TipoDocumento())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ElencoTipiDocumentoAsync(ByVal codice As String)
            Me.ElencoTipiDocumentoAsync(codice, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ElencoTipiDocumentoAsync(ByVal codice As String, ByVal userState As Object)
            If (Me.ElencoTipiDocumentoOperationCompleted Is Nothing) Then
                Me.ElencoTipiDocumentoOperationCompleted = AddressOf Me.OnElencoTipiDocumentoOperationCompleted
            End If
            Me.InvokeAsync("ElencoTipiDocumento", New Object() {codice}, Me.ElencoTipiDocumentoOperationCompleted, userState)
        End Sub
        
        Private Sub OnElencoTipiDocumentoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ElencoTipiDocumentoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ElencoTipiDocumentoCompleted(Me, New ElencoTipiDocumentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/ProprietaTipoDocumento", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ProprietaTipoDocumento(ByVal codice As String, ByVal tipo As String) As TipoDocumento
            Dim results() As Object = Me.Invoke("ProprietaTipoDocumento", New Object() {codice, tipo})
            Return CType(results(0),TipoDocumento)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ProprietaTipoDocumentoAsync(ByVal codice As String, ByVal tipo As String)
            Me.ProprietaTipoDocumentoAsync(codice, tipo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ProprietaTipoDocumentoAsync(ByVal codice As String, ByVal tipo As String, ByVal userState As Object)
            If (Me.ProprietaTipoDocumentoOperationCompleted Is Nothing) Then
                Me.ProprietaTipoDocumentoOperationCompleted = AddressOf Me.OnProprietaTipoDocumentoOperationCompleted
            End If
            Me.InvokeAsync("ProprietaTipoDocumento", New Object() {codice, tipo}, Me.ProprietaTipoDocumentoOperationCompleted, userState)
        End Sub
        
        Private Sub OnProprietaTipoDocumentoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ProprietaTipoDocumentoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ProprietaTipoDocumentoCompleted(Me, New ProprietaTipoDocumentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/TipologiaDocumento", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TipologiaDocumento(ByVal codice As String, ByVal doc As Integer) As TipoDocumento
            Dim results() As Object = Me.Invoke("TipologiaDocumento", New Object() {codice, doc})
            Return CType(results(0),TipoDocumento)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TipologiaDocumentoAsync(ByVal codice As String, ByVal doc As Integer)
            Me.TipologiaDocumentoAsync(codice, doc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TipologiaDocumentoAsync(ByVal codice As String, ByVal doc As Integer, ByVal userState As Object)
            If (Me.TipologiaDocumentoOperationCompleted Is Nothing) Then
                Me.TipologiaDocumentoOperationCompleted = AddressOf Me.OnTipologiaDocumentoOperationCompleted
            End If
            Me.InvokeAsync("TipologiaDocumento", New Object() {codice, doc}, Me.TipologiaDocumentoOperationCompleted, userState)
        End Sub
        
        Private Sub OnTipologiaDocumentoOperationCompleted(ByVal arg As Object)
            If (Not (Me.TipologiaDocumentoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TipologiaDocumentoCompleted(Me, New TipologiaDocumentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/ElencoTitolari", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ElencoTitolari(ByVal codice As String, ByVal padre As Integer, ByVal cod As String) As Titolario()
            Dim results() As Object = Me.Invoke("ElencoTitolari", New Object() {codice, padre, cod})
            Return CType(results(0),Titolario())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ElencoTitolariAsync(ByVal codice As String, ByVal padre As Integer, ByVal cod As String)
            Me.ElencoTitolariAsync(codice, padre, cod, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ElencoTitolariAsync(ByVal codice As String, ByVal padre As Integer, ByVal cod As String, ByVal userState As Object)
            If (Me.ElencoTitolariOperationCompleted Is Nothing) Then
                Me.ElencoTitolariOperationCompleted = AddressOf Me.OnElencoTitolariOperationCompleted
            End If
            Me.InvokeAsync("ElencoTitolari", New Object() {codice, padre, cod}, Me.ElencoTitolariOperationCompleted, userState)
        End Sub
        
        Private Sub OnElencoTitolariOperationCompleted(ByVal arg As Object)
            If (Not (Me.ElencoTitolariCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ElencoTitolariCompleted(Me, New ElencoTitolariCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/CreaTitolario", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreaTitolario(ByVal codice As String, ByVal R As Titolario) As Integer
            Dim results() As Object = Me.Invoke("CreaTitolario", New Object() {codice, R})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreaTitolarioAsync(ByVal codice As String, ByVal R As Titolario)
            Me.CreaTitolarioAsync(codice, R, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreaTitolarioAsync(ByVal codice As String, ByVal R As Titolario, ByVal userState As Object)
            If (Me.CreaTitolarioOperationCompleted Is Nothing) Then
                Me.CreaTitolarioOperationCompleted = AddressOf Me.OnCreaTitolarioOperationCompleted
            End If
            Me.InvokeAsync("CreaTitolario", New Object() {codice, R}, Me.CreaTitolarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreaTitolarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreaTitolarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreaTitolarioCompleted(Me, New CreaTitolarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/SerialNumberKey", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SerialNumberKey(ByVal Key As String) As String
            Dim results() As Object = Me.Invoke("SerialNumberKey", New Object() {Key})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SerialNumberKeyAsync(ByVal Key As String)
            Me.SerialNumberKeyAsync(Key, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SerialNumberKeyAsync(ByVal Key As String, ByVal userState As Object)
            If (Me.SerialNumberKeyOperationCompleted Is Nothing) Then
                Me.SerialNumberKeyOperationCompleted = AddressOf Me.OnSerialNumberKeyOperationCompleted
            End If
            Me.InvokeAsync("SerialNumberKey", New Object() {Key}, Me.SerialNumberKeyOperationCompleted, userState)
        End Sub
        
        Private Sub OnSerialNumberKeyOperationCompleted(ByVal arg As Object)
            If (Not (Me.SerialNumberKeyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SerialNumberKeyCompleted(Me, New SerialNumberKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/IsSerialNumberValid", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function IsSerialNumberValid() As Boolean
            Dim results() As Object = Me.Invoke("IsSerialNumberValid", New Object(-1) {})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub IsSerialNumberValidAsync()
            Me.IsSerialNumberValidAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub IsSerialNumberValidAsync(ByVal userState As Object)
            If (Me.IsSerialNumberValidOperationCompleted Is Nothing) Then
                Me.IsSerialNumberValidOperationCompleted = AddressOf Me.OnIsSerialNumberValidOperationCompleted
            End If
            Me.InvokeAsync("IsSerialNumberValid", New Object(-1) {}, Me.IsSerialNumberValidOperationCompleted, userState)
        End Sub
        
        Private Sub OnIsSerialNumberValidOperationCompleted(ByVal arg As Object)
            If (Not (Me.IsSerialNumberValidCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent IsSerialNumberValidCompleted(Me, New IsSerialNumberValidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/IsSerialNumberExpired", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function IsSerialNumberExpired() As Boolean
            Dim results() As Object = Me.Invoke("IsSerialNumberExpired", New Object(-1) {})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub IsSerialNumberExpiredAsync()
            Me.IsSerialNumberExpiredAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub IsSerialNumberExpiredAsync(ByVal userState As Object)
            If (Me.IsSerialNumberExpiredOperationCompleted Is Nothing) Then
                Me.IsSerialNumberExpiredOperationCompleted = AddressOf Me.OnIsSerialNumberExpiredOperationCompleted
            End If
            Me.InvokeAsync("IsSerialNumberExpired", New Object(-1) {}, Me.IsSerialNumberExpiredOperationCompleted, userState)
        End Sub
        
        Private Sub OnIsSerialNumberExpiredOperationCompleted(ByVal arg As Object)
            If (Not (Me.IsSerialNumberExpiredCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent IsSerialNumberExpiredCompleted(Me, New IsSerialNumberExpiredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/IsSerialNumberNotPresent", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function IsSerialNumberNotPresent() As Boolean
            Dim results() As Object = Me.Invoke("IsSerialNumberNotPresent", New Object(-1) {})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub IsSerialNumberNotPresentAsync()
            Me.IsSerialNumberNotPresentAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub IsSerialNumberNotPresentAsync(ByVal userState As Object)
            If (Me.IsSerialNumberNotPresentOperationCompleted Is Nothing) Then
                Me.IsSerialNumberNotPresentOperationCompleted = AddressOf Me.OnIsSerialNumberNotPresentOperationCompleted
            End If
            Me.InvokeAsync("IsSerialNumberNotPresent", New Object(-1) {}, Me.IsSerialNumberNotPresentOperationCompleted, userState)
        End Sub
        
        Private Sub OnIsSerialNumberNotPresentOperationCompleted(ByVal arg As Object)
            If (Not (Me.IsSerialNumberNotPresentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent IsSerialNumberNotPresentCompleted(Me, New IsSerialNumberNotPresentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/InstallationID", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InstallationID() As String
            Dim results() As Object = Me.Invoke("InstallationID", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InstallationIDAsync()
            Me.InstallationIDAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InstallationIDAsync(ByVal userState As Object)
            If (Me.InstallationIDOperationCompleted Is Nothing) Then
                Me.InstallationIDOperationCompleted = AddressOf Me.OnInstallationIDOperationCompleted
            End If
            Me.InvokeAsync("InstallationID", New Object(-1) {}, Me.InstallationIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnInstallationIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.InstallationIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InstallationIDCompleted(Me, New InstallationIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/ActiveProduct", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ActiveProduct(ByVal NewToken As String) As String
            Dim results() As Object = Me.Invoke("ActiveProduct", New Object() {NewToken})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ActiveProductAsync(ByVal NewToken As String)
            Me.ActiveProductAsync(NewToken, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ActiveProductAsync(ByVal NewToken As String, ByVal userState As Object)
            If (Me.ActiveProductOperationCompleted Is Nothing) Then
                Me.ActiveProductOperationCompleted = AddressOf Me.OnActiveProductOperationCompleted
            End If
            Me.InvokeAsync("ActiveProduct", New Object() {NewToken}, Me.ActiveProductOperationCompleted, userState)
        End Sub
        
        Private Sub OnActiveProductOperationCompleted(ByVal arg As Object)
            If (Not (Me.ActiveProductCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ActiveProductCompleted(Me, New ActiveProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/Decodifica", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Decodifica(ByVal tabella As String, ByVal valore As String) As String
            Dim results() As Object = Me.Invoke("Decodifica", New Object() {tabella, valore})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DecodificaAsync(ByVal tabella As String, ByVal valore As String)
            Me.DecodificaAsync(tabella, valore, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DecodificaAsync(ByVal tabella As String, ByVal valore As String, ByVal userState As Object)
            If (Me.DecodificaOperationCompleted Is Nothing) Then
                Me.DecodificaOperationCompleted = AddressOf Me.OnDecodificaOperationCompleted
            End If
            Me.InvokeAsync("Decodifica", New Object() {tabella, valore}, Me.DecodificaOperationCompleted, userState)
        End Sub
        
        Private Sub OnDecodificaOperationCompleted(ByVal arg As Object)
            If (Not (Me.DecodificaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DecodificaCompleted(Me, New DecodificaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/ValoriChiave", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValoriChiave(ByVal codice As String, ByVal TipoChiave As String, ByVal Valore As String) As TabellaLookup()
            Dim results() As Object = Me.Invoke("ValoriChiave", New Object() {codice, TipoChiave, Valore})
            Return CType(results(0),TabellaLookup())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ValoriChiaveAsync(ByVal codice As String, ByVal TipoChiave As String, ByVal Valore As String)
            Me.ValoriChiaveAsync(codice, TipoChiave, Valore, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ValoriChiaveAsync(ByVal codice As String, ByVal TipoChiave As String, ByVal Valore As String, ByVal userState As Object)
            If (Me.ValoriChiaveOperationCompleted Is Nothing) Then
                Me.ValoriChiaveOperationCompleted = AddressOf Me.OnValoriChiaveOperationCompleted
            End If
            Me.InvokeAsync("ValoriChiave", New Object() {codice, TipoChiave, Valore}, Me.ValoriChiaveOperationCompleted, userState)
        End Sub
        
        Private Sub OnValoriChiaveOperationCompleted(ByVal arg As Object)
            If (Not (Me.ValoriChiaveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ValoriChiaveCompleted(Me, New ValoriChiaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/ElencoChiavi", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ElencoChiavi(ByVal codice As String) As Rubrica()
            Dim results() As Object = Me.Invoke("ElencoChiavi", New Object() {codice})
            Return CType(results(0),Rubrica())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ElencoChiaviAsync(ByVal codice As String)
            Me.ElencoChiaviAsync(codice, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ElencoChiaviAsync(ByVal codice As String, ByVal userState As Object)
            If (Me.ElencoChiaviOperationCompleted Is Nothing) Then
                Me.ElencoChiaviOperationCompleted = AddressOf Me.OnElencoChiaviOperationCompleted
            End If
            Me.InvokeAsync("ElencoChiavi", New Object() {codice}, Me.ElencoChiaviOperationCompleted, userState)
        End Sub
        
        Private Sub OnElencoChiaviOperationCompleted(ByVal arg As Object)
            If (Not (Me.ElencoChiaviCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ElencoChiaviCompleted(Me, New ElencoChiaviCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/TagTypeFields", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TagTypeFields(ByVal BD As String, ByVal TagType As String, ByVal TabTypeValue As String, ByRef values() As String) As <System.Xml.Serialization.XmlArrayAttribute("fields")> String()
            Dim results() As Object = Me.Invoke("TagTypeFields", New Object() {BD, TagType, TabTypeValue})
            values = CType(results(1),String())
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub TagTypeFieldsAsync(ByVal BD As String, ByVal TagType As String, ByVal TabTypeValue As String)
            Me.TagTypeFieldsAsync(BD, TagType, TabTypeValue, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TagTypeFieldsAsync(ByVal BD As String, ByVal TagType As String, ByVal TabTypeValue As String, ByVal userState As Object)
            If (Me.TagTypeFieldsOperationCompleted Is Nothing) Then
                Me.TagTypeFieldsOperationCompleted = AddressOf Me.OnTagTypeFieldsOperationCompleted
            End If
            Me.InvokeAsync("TagTypeFields", New Object() {BD, TagType, TabTypeValue}, Me.TagTypeFieldsOperationCompleted, userState)
        End Sub
        
        Private Sub OnTagTypeFieldsOperationCompleted(ByVal arg As Object)
            If (Not (Me.TagTypeFieldsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TagTypeFieldsCompleted(Me, New TagTypeFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/GetEditUrl", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEditUrl(ByVal Code As String, ByVal Number As Integer) As String
            Dim results() As Object = Me.Invoke("GetEditUrl", New Object() {Code, Number})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEditUrlAsync(ByVal Code As String, ByVal Number As Integer)
            Me.GetEditUrlAsync(Code, Number, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEditUrlAsync(ByVal Code As String, ByVal Number As Integer, ByVal userState As Object)
            If (Me.GetEditUrlOperationCompleted Is Nothing) Then
                Me.GetEditUrlOperationCompleted = AddressOf Me.OnGetEditUrlOperationCompleted
            End If
            Me.InvokeAsync("GetEditUrl", New Object() {Code, Number}, Me.GetEditUrlOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEditUrlOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEditUrlCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEditUrlCompleted(Me, New GetEditUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/GetLabel", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLabel(ByVal BD As String, ByVal DocType As String) As String
            Dim results() As Object = Me.Invoke("GetLabel", New Object() {BD, DocType})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLabelAsync(ByVal BD As String, ByVal DocType As String)
            Me.GetLabelAsync(BD, DocType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLabelAsync(ByVal BD As String, ByVal DocType As String, ByVal userState As Object)
            If (Me.GetLabelOperationCompleted Is Nothing) Then
                Me.GetLabelOperationCompleted = AddressOf Me.OnGetLabelOperationCompleted
            End If
            Me.InvokeAsync("GetLabel", New Object() {BD, DocType}, Me.GetLabelOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLabelOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLabelCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLabelCompleted(Me, New GetLabelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/NewEmergencySession", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NewEmergencySession(ByVal Bd As String, ByVal Name As String, ByVal Note As String, ByVal docs As Integer, ByVal register As String) As Integer
            Dim results() As Object = Me.Invoke("NewEmergencySession", New Object() {Bd, Name, Note, docs, register})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub NewEmergencySessionAsync(ByVal Bd As String, ByVal Name As String, ByVal Note As String, ByVal docs As Integer, ByVal register As String)
            Me.NewEmergencySessionAsync(Bd, Name, Note, docs, register, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NewEmergencySessionAsync(ByVal Bd As String, ByVal Name As String, ByVal Note As String, ByVal docs As Integer, ByVal register As String, ByVal userState As Object)
            If (Me.NewEmergencySessionOperationCompleted Is Nothing) Then
                Me.NewEmergencySessionOperationCompleted = AddressOf Me.OnNewEmergencySessionOperationCompleted
            End If
            Me.InvokeAsync("NewEmergencySession", New Object() {Bd, Name, Note, docs, register}, Me.NewEmergencySessionOperationCompleted, userState)
        End Sub
        
        Private Sub OnNewEmergencySessionOperationCompleted(ByVal arg As Object)
            If (Not (Me.NewEmergencySessionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NewEmergencySessionCompleted(Me, New NewEmergencySessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/ProprietaDocumento", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ProprietaDocumento(ByVal codice As String, ByVal Numero As String) As Documento
            Dim results() As Object = Me.Invoke("ProprietaDocumento", New Object() {codice, Numero})
            Return CType(results(0),Documento)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ProprietaDocumentoAsync(ByVal codice As String, ByVal Numero As String)
            Me.ProprietaDocumentoAsync(codice, Numero, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ProprietaDocumentoAsync(ByVal codice As String, ByVal Numero As String, ByVal userState As Object)
            If (Me.ProprietaDocumentoOperationCompleted Is Nothing) Then
                Me.ProprietaDocumentoOperationCompleted = AddressOf Me.OnProprietaDocumentoOperationCompleted
            End If
            Me.InvokeAsync("ProprietaDocumento", New Object() {codice, Numero}, Me.ProprietaDocumentoOperationCompleted, userState)
        End Sub
        
        Private Sub OnProprietaDocumentoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ProprietaDocumentoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ProprietaDocumentoCompleted(Me, New ProprietaDocumentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/Save", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Save(ByVal d As Documento, ByRef Errori As String) As Integer
            Dim results() As Object = Me.Invoke("Save", New Object() {d})
            Errori = CType(results(1),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveAsync(ByVal d As Documento)
            Me.SaveAsync(d, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveAsync(ByVal d As Documento, ByVal userState As Object)
            If (Me.SaveOperationCompleted Is Nothing) Then
                Me.SaveOperationCompleted = AddressOf Me.OnSaveOperationCompleted
            End If
            Me.InvokeAsync("Save", New Object() {d}, Me.SaveOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveCompleted(Me, New SaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/AddImage", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddImage(ByVal BD As String, ByVal ID As String, ByVal FileName As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal Image() As Byte) As String
            Dim results() As Object = Me.Invoke("AddImage", New Object() {BD, ID, FileName, Image})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddImageAsync(ByVal BD As String, ByVal ID As String, ByVal FileName As String, ByVal Image() As Byte)
            Me.AddImageAsync(BD, ID, FileName, Image, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddImageAsync(ByVal BD As String, ByVal ID As String, ByVal FileName As String, ByVal Image() As Byte, ByVal userState As Object)
            If (Me.AddImageOperationCompleted Is Nothing) Then
                Me.AddImageOperationCompleted = AddressOf Me.OnAddImageOperationCompleted
            End If
            Me.InvokeAsync("AddImage", New Object() {BD, ID, FileName, Image}, Me.AddImageOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddImageOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddImageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddImageCompleted(Me, New AddImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/GetImage", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetImage(ByVal codice As String, ByVal Doc As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByRef file() As Byte) As String
            Dim results() As Object = Me.Invoke("GetImage", New Object() {codice, Doc})
            file = CType(results(1),Byte())
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetImageAsync(ByVal codice As String, ByVal Doc As String)
            Me.GetImageAsync(codice, Doc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetImageAsync(ByVal codice As String, ByVal Doc As String, ByVal userState As Object)
            If (Me.GetImageOperationCompleted Is Nothing) Then
                Me.GetImageOperationCompleted = AddressOf Me.OnGetImageOperationCompleted
            End If
            Me.InvokeAsync("GetImage", New Object() {codice, Doc}, Me.GetImageOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetImageOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetImageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetImageCompleted(Me, New GetImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/CalcolaHash", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CalcolaHash(ByVal codice As String, ByVal Numero As String) As String
            Dim results() As Object = Me.Invoke("CalcolaHash", New Object() {codice, Numero})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CalcolaHashAsync(ByVal codice As String, ByVal Numero As String)
            Me.CalcolaHashAsync(codice, Numero, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CalcolaHashAsync(ByVal codice As String, ByVal Numero As String, ByVal userState As Object)
            If (Me.CalcolaHashOperationCompleted Is Nothing) Then
                Me.CalcolaHashOperationCompleted = AddressOf Me.OnCalcolaHashOperationCompleted
            End If
            Me.InvokeAsync("CalcolaHash", New Object() {codice, Numero}, Me.CalcolaHashOperationCompleted, userState)
        End Sub
        
        Private Sub OnCalcolaHashOperationCompleted(ByVal arg As Object)
            If (Not (Me.CalcolaHashCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CalcolaHashCompleted(Me, New CalcolaHashCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/RevisioniDocumento", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RevisioniDocumento(ByVal codice As String, ByVal Numero As String) As <System.Xml.Serialization.XmlArrayItemAttribute(IsNullable:=false)> Revisione()
            Dim results() As Object = Me.Invoke("RevisioniDocumento", New Object() {codice, Numero})
            Return CType(results(0),Revisione())
        End Function
        
        '''<remarks/>
        Public Overloads Sub RevisioniDocumentoAsync(ByVal codice As String, ByVal Numero As String)
            Me.RevisioniDocumentoAsync(codice, Numero, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RevisioniDocumentoAsync(ByVal codice As String, ByVal Numero As String, ByVal userState As Object)
            If (Me.RevisioniDocumentoOperationCompleted Is Nothing) Then
                Me.RevisioniDocumentoOperationCompleted = AddressOf Me.OnRevisioniDocumentoOperationCompleted
            End If
            Me.InvokeAsync("RevisioniDocumento", New Object() {codice, Numero}, Me.RevisioniDocumentoOperationCompleted, userState)
        End Sub
        
        Private Sub OnRevisioniDocumentoOperationCompleted(ByVal arg As Object)
            If (Not (Me.RevisioniDocumentoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RevisioniDocumentoCompleted(Me, New RevisioniDocumentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/ElencoCorrelati", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ElencoCorrelati(ByVal codice As String, ByVal Numero As Integer) As Integer()
            Dim results() As Object = Me.Invoke("ElencoCorrelati", New Object() {codice, Numero})
            Return CType(results(0),Integer())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ElencoCorrelatiAsync(ByVal codice As String, ByVal Numero As Integer)
            Me.ElencoCorrelatiAsync(codice, Numero, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ElencoCorrelatiAsync(ByVal codice As String, ByVal Numero As Integer, ByVal userState As Object)
            If (Me.ElencoCorrelatiOperationCompleted Is Nothing) Then
                Me.ElencoCorrelatiOperationCompleted = AddressOf Me.OnElencoCorrelatiOperationCompleted
            End If
            Me.InvokeAsync("ElencoCorrelati", New Object() {codice, Numero}, Me.ElencoCorrelatiOperationCompleted, userState)
        End Sub
        
        Private Sub OnElencoCorrelatiOperationCompleted(ByVal arg As Object)
            If (Not (Me.ElencoCorrelatiCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ElencoCorrelatiCompleted(Me, New ElencoCorrelatiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/Firma", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Firma(ByVal codice As String, ByVal d As Integer, ByVal Firmato As Boolean, ByVal Marcato As Boolean, ByVal Lotto As String)
            Me.Invoke("Firma", New Object() {codice, d, Firmato, Marcato, Lotto})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FirmaAsync(ByVal codice As String, ByVal d As Integer, ByVal Firmato As Boolean, ByVal Marcato As Boolean, ByVal Lotto As String)
            Me.FirmaAsync(codice, d, Firmato, Marcato, Lotto, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FirmaAsync(ByVal codice As String, ByVal d As Integer, ByVal Firmato As Boolean, ByVal Marcato As Boolean, ByVal Lotto As String, ByVal userState As Object)
            If (Me.FirmaOperationCompleted Is Nothing) Then
                Me.FirmaOperationCompleted = AddressOf Me.OnFirmaOperationCompleted
            End If
            Me.InvokeAsync("Firma", New Object() {codice, d, Firmato, Marcato, Lotto}, Me.FirmaOperationCompleted, userState)
        End Sub
        
        Private Sub OnFirmaOperationCompleted(ByVal arg As Object)
            If (Not (Me.FirmaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FirmaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/Masterizza", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Masterizza(ByVal codice As String, ByVal d As Integer)
            Me.Invoke("Masterizza", New Object() {codice, d})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MasterizzaAsync(ByVal codice As String, ByVal d As Integer)
            Me.MasterizzaAsync(codice, d, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MasterizzaAsync(ByVal codice As String, ByVal d As Integer, ByVal userState As Object)
            If (Me.MasterizzaOperationCompleted Is Nothing) Then
                Me.MasterizzaOperationCompleted = AddressOf Me.OnMasterizzaOperationCompleted
            End If
            Me.InvokeAsync("Masterizza", New Object() {codice, d}, Me.MasterizzaOperationCompleted, userState)
        End Sub
        
        Private Sub OnMasterizzaOperationCompleted(ByVal arg As Object)
            If (Not (Me.MasterizzaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MasterizzaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/DeleteDocumento", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteDocumento(ByVal codice As String, ByVal documento As Integer) As Integer
            Dim results() As Object = Me.Invoke("DeleteDocumento", New Object() {codice, documento})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteDocumentoAsync(ByVal codice As String, ByVal documento As Integer)
            Me.DeleteDocumentoAsync(codice, documento, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteDocumentoAsync(ByVal codice As String, ByVal documento As Integer, ByVal userState As Object)
            If (Me.DeleteDocumentoOperationCompleted Is Nothing) Then
                Me.DeleteDocumentoOperationCompleted = AddressOf Me.OnDeleteDocumentoOperationCompleted
            End If
            Me.InvokeAsync("DeleteDocumento", New Object() {codice, documento}, Me.DeleteDocumentoOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteDocumentoOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteDocumentoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteDocumentoCompleted(Me, New DeleteDocumentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/UpdateFile", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateFile(<System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal file() As Byte, ByVal Ext As String) As String
            Dim results() As Object = Me.Invoke("UpdateFile", New Object() {file, Ext})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateFileAsync(ByVal file() As Byte, ByVal Ext As String)
            Me.UpdateFileAsync(file, Ext, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateFileAsync(ByVal file() As Byte, ByVal Ext As String, ByVal userState As Object)
            If (Me.UpdateFileOperationCompleted Is Nothing) Then
                Me.UpdateFileOperationCompleted = AddressOf Me.OnUpdateFileOperationCompleted
            End If
            Me.InvokeAsync("UpdateFile", New Object() {file, Ext}, Me.UpdateFileOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateFileCompleted(Me, New UpdateFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/UploadGDD", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UploadGDD(ByVal GddData As String, ByRef Err As String) As Integer
            Dim results() As Object = Me.Invoke("UploadGDD", New Object() {GddData})
            Err = CType(results(1),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UploadGDDAsync(ByVal GddData As String)
            Me.UploadGDDAsync(GddData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UploadGDDAsync(ByVal GddData As String, ByVal userState As Object)
            If (Me.UploadGDDOperationCompleted Is Nothing) Then
                Me.UploadGDDOperationCompleted = AddressOf Me.OnUploadGDDOperationCompleted
            End If
            Me.InvokeAsync("UploadGDD", New Object() {GddData}, Me.UploadGDDOperationCompleted, userState)
        End Sub
        
        Private Sub OnUploadGDDOperationCompleted(ByVal arg As Object)
            If (Not (Me.UploadGDDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UploadGDDCompleted(Me, New UploadGDDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/Find", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Find(ByVal codice As String, ByVal sql As String) As Integer()
            Dim results() As Object = Me.Invoke("Find", New Object() {codice, sql})
            Return CType(results(0),Integer())
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindAsync(ByVal codice As String, ByVal sql As String)
            Me.FindAsync(codice, sql, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindAsync(ByVal codice As String, ByVal sql As String, ByVal userState As Object)
            If (Me.FindOperationCompleted Is Nothing) Then
                Me.FindOperationCompleted = AddressOf Me.OnFindOperationCompleted
            End If
            Me.InvokeAsync("Find", New Object() {codice, sql}, Me.FindOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindCompleted(Me, New FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/NewImage", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NewImage(ByVal FileName As String) As String
            Dim results() As Object = Me.Invoke("NewImage", New Object() {FileName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub NewImageAsync(ByVal FileName As String)
            Me.NewImageAsync(FileName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NewImageAsync(ByVal FileName As String, ByVal userState As Object)
            If (Me.NewImageOperationCompleted Is Nothing) Then
                Me.NewImageOperationCompleted = AddressOf Me.OnNewImageOperationCompleted
            End If
            Me.InvokeAsync("NewImage", New Object() {FileName}, Me.NewImageOperationCompleted, userState)
        End Sub
        
        Private Sub OnNewImageOperationCompleted(ByVal arg As Object)
            If (Not (Me.NewImageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NewImageCompleted(Me, New NewImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/AddToNewImage", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddToNewImage(ByVal FileName As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal Image() As Byte) As String
            Dim results() As Object = Me.Invoke("AddToNewImage", New Object() {FileName, Image})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddToNewImageAsync(ByVal FileName As String, ByVal Image() As Byte)
            Me.AddToNewImageAsync(FileName, Image, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddToNewImageAsync(ByVal FileName As String, ByVal Image() As Byte, ByVal userState As Object)
            If (Me.AddToNewImageOperationCompleted Is Nothing) Then
                Me.AddToNewImageOperationCompleted = AddressOf Me.OnAddToNewImageOperationCompleted
            End If
            Me.InvokeAsync("AddToNewImage", New Object() {FileName, Image}, Me.AddToNewImageOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddToNewImageOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddToNewImageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddToNewImageCompleted(Me, New AddToNewImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/ConfirmNewImage", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConfirmNewImage(ByVal BD As String, ByVal ID As String, ByVal Description As String, ByVal FileName As String) As String
            Dim results() As Object = Me.Invoke("ConfirmNewImage", New Object() {BD, ID, Description, FileName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConfirmNewImageAsync(ByVal BD As String, ByVal ID As String, ByVal Description As String, ByVal FileName As String)
            Me.ConfirmNewImageAsync(BD, ID, Description, FileName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConfirmNewImageAsync(ByVal BD As String, ByVal ID As String, ByVal Description As String, ByVal FileName As String, ByVal userState As Object)
            If (Me.ConfirmNewImageOperationCompleted Is Nothing) Then
                Me.ConfirmNewImageOperationCompleted = AddressOf Me.OnConfirmNewImageOperationCompleted
            End If
            Me.InvokeAsync("ConfirmNewImage", New Object() {BD, ID, Description, FileName}, Me.ConfirmNewImageOperationCompleted, userState)
        End Sub
        
        Private Sub OnConfirmNewImageOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConfirmNewImageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConfirmNewImageCompleted(Me, New ConfirmNewImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/getFavorites", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getFavorites(ByVal codice As String) As Integer()
            Dim results() As Object = Me.Invoke("getFavorites", New Object() {codice})
            Return CType(results(0),Integer())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getFavoritesAsync(ByVal codice As String)
            Me.getFavoritesAsync(codice, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getFavoritesAsync(ByVal codice As String, ByVal userState As Object)
            If (Me.getFavoritesOperationCompleted Is Nothing) Then
                Me.getFavoritesOperationCompleted = AddressOf Me.OngetFavoritesOperationCompleted
            End If
            Me.InvokeAsync("getFavorites", New Object() {codice}, Me.getFavoritesOperationCompleted, userState)
        End Sub
        
        Private Sub OngetFavoritesOperationCompleted(ByVal arg As Object)
            If (Not (Me.getFavoritesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getFavoritesCompleted(Me, New getFavoritesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/getReceived", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getReceived(ByVal codice As String) As Integer()
            Dim results() As Object = Me.Invoke("getReceived", New Object() {codice})
            Return CType(results(0),Integer())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getReceivedAsync(ByVal codice As String)
            Me.getReceivedAsync(codice, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getReceivedAsync(ByVal codice As String, ByVal userState As Object)
            If (Me.getReceivedOperationCompleted Is Nothing) Then
                Me.getReceivedOperationCompleted = AddressOf Me.OngetReceivedOperationCompleted
            End If
            Me.InvokeAsync("getReceived", New Object() {codice}, Me.getReceivedOperationCompleted, userState)
        End Sub
        
        Private Sub OngetReceivedOperationCompleted(ByVal arg As Object)
            If (Not (Me.getReceivedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getReceivedCompleted(Me, New getReceivedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/getReceivedCC", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getReceivedCC(ByVal codice As String) As Integer()
            Dim results() As Object = Me.Invoke("getReceivedCC", New Object() {codice})
            Return CType(results(0),Integer())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getReceivedCCAsync(ByVal codice As String)
            Me.getReceivedCCAsync(codice, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getReceivedCCAsync(ByVal codice As String, ByVal userState As Object)
            If (Me.getReceivedCCOperationCompleted Is Nothing) Then
                Me.getReceivedCCOperationCompleted = AddressOf Me.OngetReceivedCCOperationCompleted
            End If
            Me.InvokeAsync("getReceivedCC", New Object() {codice}, Me.getReceivedCCOperationCompleted, userState)
        End Sub
        
        Private Sub OngetReceivedCCOperationCompleted(ByVal arg As Object)
            If (Not (Me.getReceivedCCCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getReceivedCCCompleted(Me, New getReceivedCCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/NextLotto", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NextLotto(ByVal codice As String, ByVal tipo As String) As Integer
            Dim results() As Object = Me.Invoke("NextLotto", New Object() {codice, tipo})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub NextLottoAsync(ByVal codice As String, ByVal tipo As String)
            Me.NextLottoAsync(codice, tipo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NextLottoAsync(ByVal codice As String, ByVal tipo As String, ByVal userState As Object)
            If (Me.NextLottoOperationCompleted Is Nothing) Then
                Me.NextLottoOperationCompleted = AddressOf Me.OnNextLottoOperationCompleted
            End If
            Me.InvokeAsync("NextLotto", New Object() {codice, tipo}, Me.NextLottoOperationCompleted, userState)
        End Sub
        
        Private Sub OnNextLottoOperationCompleted(ByVal arg As Object)
            If (Not (Me.NextLottoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NextLottoCompleted(Me, New NextLottoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/UltimoProtocollo", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UltimoProtocollo(ByVal codice As String, ByVal tipo As String, ByVal anno As String) As Integer
            Dim results() As Object = Me.Invoke("UltimoProtocollo", New Object() {codice, tipo, anno})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UltimoProtocolloAsync(ByVal codice As String, ByVal tipo As String, ByVal anno As String)
            Me.UltimoProtocolloAsync(codice, tipo, anno, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UltimoProtocolloAsync(ByVal codice As String, ByVal tipo As String, ByVal anno As String, ByVal userState As Object)
            If (Me.UltimoProtocolloOperationCompleted Is Nothing) Then
                Me.UltimoProtocolloOperationCompleted = AddressOf Me.OnUltimoProtocolloOperationCompleted
            End If
            Me.InvokeAsync("UltimoProtocollo", New Object() {codice, tipo, anno}, Me.UltimoProtocolloOperationCompleted, userState)
        End Sub
        
        Private Sub OnUltimoProtocolloOperationCompleted(ByVal arg As Object)
            If (Not (Me.UltimoProtocolloCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UltimoProtocolloCompleted(Me, New UltimoProtocolloCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/Protocolli", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Protocolli(ByVal codice As String, ByVal tipo As String, ByVal anno As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("Protocolli", New Object() {codice, tipo, anno})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ProtocolliAsync(ByVal codice As String, ByVal tipo As String, ByVal anno As String)
            Me.ProtocolliAsync(codice, tipo, anno, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ProtocolliAsync(ByVal codice As String, ByVal tipo As String, ByVal anno As String, ByVal userState As Object)
            If (Me.ProtocolliOperationCompleted Is Nothing) Then
                Me.ProtocolliOperationCompleted = AddressOf Me.OnProtocolliOperationCompleted
            End If
            Me.InvokeAsync("Protocolli", New Object() {codice, tipo, anno}, Me.ProtocolliOperationCompleted, userState)
        End Sub
        
        Private Sub OnProtocolliOperationCompleted(ByVal arg As Object)
            If (Not (Me.ProtocolliCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ProtocolliCompleted(Me, New ProtocolliCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/_Rubriche", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function _Rubriche(ByVal Codice As String) As Rubrica()
            Dim results() As Object = Me.Invoke("_Rubriche", New Object() {Codice})
            Return CType(results(0),Rubrica())
        End Function
        
        '''<remarks/>
        Public Overloads Sub _RubricheAsync(ByVal Codice As String)
            Me._RubricheAsync(Codice, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub _RubricheAsync(ByVal Codice As String, ByVal userState As Object)
            If (Me._RubricheOperationCompleted Is Nothing) Then
                Me._RubricheOperationCompleted = AddressOf Me.On_RubricheOperationCompleted
            End If
            Me.InvokeAsync("_Rubriche", New Object() {Codice}, Me._RubricheOperationCompleted, userState)
        End Sub
        
        Private Sub On_RubricheOperationCompleted(ByVal arg As Object)
            If (Not (Me._RubricheCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent _RubricheCompleted(Me, New _RubricheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/VociRubrica", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VociRubrica(ByVal codice As String, ByVal r As Rubrica, ByVal Valore As String) As TabellaLookup()
            Dim results() As Object = Me.Invoke("VociRubrica", New Object() {codice, r, Valore})
            Return CType(results(0),TabellaLookup())
        End Function
        
        '''<remarks/>
        Public Overloads Sub VociRubricaAsync(ByVal codice As String, ByVal r As Rubrica, ByVal Valore As String)
            Me.VociRubricaAsync(codice, r, Valore, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VociRubricaAsync(ByVal codice As String, ByVal r As Rubrica, ByVal Valore As String, ByVal userState As Object)
            If (Me.VociRubricaOperationCompleted Is Nothing) Then
                Me.VociRubricaOperationCompleted = AddressOf Me.OnVociRubricaOperationCompleted
            End If
            Me.InvokeAsync("VociRubrica", New Object() {codice, r, Valore}, Me.VociRubricaOperationCompleted, userState)
        End Sub
        
        Private Sub OnVociRubricaOperationCompleted(ByVal arg As Object)
            If (Not (Me.VociRubricaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VociRubricaCompleted(Me, New VociRubricaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/xxxxCambiaStato", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function xxxxCambiaStato(ByVal d As Documento, ByVal motivo As String) As String
            Dim results() As Object = Me.Invoke("xxxxCambiaStato", New Object() {d, motivo})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub xxxxCambiaStatoAsync(ByVal d As Documento, ByVal motivo As String)
            Me.xxxxCambiaStatoAsync(d, motivo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub xxxxCambiaStatoAsync(ByVal d As Documento, ByVal motivo As String, ByVal userState As Object)
            If (Me.xxxxCambiaStatoOperationCompleted Is Nothing) Then
                Me.xxxxCambiaStatoOperationCompleted = AddressOf Me.OnxxxxCambiaStatoOperationCompleted
            End If
            Me.InvokeAsync("xxxxCambiaStato", New Object() {d, motivo}, Me.xxxxCambiaStatoOperationCompleted, userState)
        End Sub
        
        Private Sub OnxxxxCambiaStatoOperationCompleted(ByVal arg As Object)
            If (Not (Me.xxxxCambiaStatoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent xxxxCambiaStatoCompleted(Me, New xxxxCambiaStatoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/GetImmagine", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetImmagine(ByVal codice As String, ByVal Doc As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByRef file() As Byte) As String
            Dim results() As Object = Me.Invoke("GetImmagine", New Object() {codice, Doc})
            file = CType(results(1),Byte())
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetImmagineAsync(ByVal codice As String, ByVal Doc As String)
            Me.GetImmagineAsync(codice, Doc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetImmagineAsync(ByVal codice As String, ByVal Doc As String, ByVal userState As Object)
            If (Me.GetImmagineOperationCompleted Is Nothing) Then
                Me.GetImmagineOperationCompleted = AddressOf Me.OnGetImmagineOperationCompleted
            End If
            Me.InvokeAsync("GetImmagine", New Object() {codice, Doc}, Me.GetImmagineOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetImmagineOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetImmagineCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetImmagineCompleted(Me, New GetImmagineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/SalvaGDD", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SalvaGDD(ByVal GddData As String, ByRef Err As String) As Integer
            Dim results() As Object = Me.Invoke("SalvaGDD", New Object() {GddData})
            Err = CType(results(1),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SalvaGDDAsync(ByVal GddData As String)
            Me.SalvaGDDAsync(GddData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SalvaGDDAsync(ByVal GddData As String, ByVal userState As Object)
            If (Me.SalvaGDDOperationCompleted Is Nothing) Then
                Me.SalvaGDDOperationCompleted = AddressOf Me.OnSalvaGDDOperationCompleted
            End If
            Me.InvokeAsync("SalvaGDD", New Object() {GddData}, Me.SalvaGDDOperationCompleted, userState)
        End Sub
        
        Private Sub OnSalvaGDDOperationCompleted(ByVal arg As Object)
            If (Not (Me.SalvaGDDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SalvaGDDCompleted(Me, New SalvaGDDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/ProtocollaGDDFile", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ProtocollaGDDFile(ByVal GddData As String, ByRef Errori As String) As Integer
            Dim results() As Object = Me.Invoke("ProtocollaGDDFile", New Object() {GddData})
            Errori = CType(results(1),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ProtocollaGDDFileAsync(ByVal GddData As String)
            Me.ProtocollaGDDFileAsync(GddData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ProtocollaGDDFileAsync(ByVal GddData As String, ByVal userState As Object)
            If (Me.ProtocollaGDDFileOperationCompleted Is Nothing) Then
                Me.ProtocollaGDDFileOperationCompleted = AddressOf Me.OnProtocollaGDDFileOperationCompleted
            End If
            Me.InvokeAsync("ProtocollaGDDFile", New Object() {GddData}, Me.ProtocollaGDDFileOperationCompleted, userState)
        End Sub
        
        Private Sub OnProtocollaGDDFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.ProtocollaGDDFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ProtocollaGDDFileCompleted(Me, New ProtocollaGDDFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/GetImageFile", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetImageFile(ByVal codice As String, ByVal Image As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByRef file() As Byte) As String
            Dim results() As Object = Me.Invoke("GetImageFile", New Object() {codice, Image})
            file = CType(results(1),Byte())
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetImageFileAsync(ByVal codice As String, ByVal Image As String)
            Me.GetImageFileAsync(codice, Image, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetImageFileAsync(ByVal codice As String, ByVal Image As String, ByVal userState As Object)
            If (Me.GetImageFileOperationCompleted Is Nothing) Then
                Me.GetImageFileOperationCompleted = AddressOf Me.OnGetImageFileOperationCompleted
            End If
            Me.InvokeAsync("GetImageFile", New Object() {codice, Image}, Me.GetImageFileOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetImageFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetImageFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetImageFileCompleted(Me, New GetImageFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/SignHash", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SignHash(ByVal BD As String, ByVal Image As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal P7M() As Byte) As Boolean
            Dim results() As Object = Me.Invoke("SignHash", New Object() {BD, Image, P7M})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SignHashAsync(ByVal BD As String, ByVal Image As String, ByVal P7M() As Byte)
            Me.SignHashAsync(BD, Image, P7M, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SignHashAsync(ByVal BD As String, ByVal Image As String, ByVal P7M() As Byte, ByVal userState As Object)
            If (Me.SignHashOperationCompleted Is Nothing) Then
                Me.SignHashOperationCompleted = AddressOf Me.OnSignHashOperationCompleted
            End If
            Me.InvokeAsync("SignHash", New Object() {BD, Image, P7M}, Me.SignHashOperationCompleted, userState)
        End Sub
        
        Private Sub OnSignHashOperationCompleted(ByVal arg As Object)
            If (Not (Me.SignHashCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SignHashCompleted(Me, New SignHashCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/GetHash", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetHash(ByVal BD As String, ByVal Image As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByRef hash() As Byte) As String
            Dim results() As Object = Me.Invoke("GetHash", New Object() {BD, Image})
            hash = CType(results(1),Byte())
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetHashAsync(ByVal BD As String, ByVal Image As String)
            Me.GetHashAsync(BD, Image, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetHashAsync(ByVal BD As String, ByVal Image As String, ByVal userState As Object)
            If (Me.GetHashOperationCompleted Is Nothing) Then
                Me.GetHashOperationCompleted = AddressOf Me.OnGetHashOperationCompleted
            End If
            Me.InvokeAsync("GetHash", New Object() {BD, Image}, Me.GetHashOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetHashOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetHashCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetHashCompleted(Me, New GetHashCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/Fusione", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Fusione(ByVal d1 As Documento, ByVal d2 As String, ByRef Errori As String) As Integer
            Dim results() As Object = Me.Invoke("Fusione", New Object() {d1, d2})
            Errori = CType(results(1),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FusioneAsync(ByVal d1 As Documento, ByVal d2 As String)
            Me.FusioneAsync(d1, d2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FusioneAsync(ByVal d1 As Documento, ByVal d2 As String, ByVal userState As Object)
            If (Me.FusioneOperationCompleted Is Nothing) Then
                Me.FusioneOperationCompleted = AddressOf Me.OnFusioneOperationCompleted
            End If
            Me.InvokeAsync("Fusione", New Object() {d1, d2}, Me.FusioneOperationCompleted, userState)
        End Sub
        
        Private Sub OnFusioneOperationCompleted(ByVal arg As Object)
            If (Not (Me.FusioneCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FusioneCompleted(Me, New FusioneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/ElencoTODOs", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ElencoTODOs(ByVal BD As String) As Integer()
            Dim results() As Object = Me.Invoke("ElencoTODOs", New Object() {BD})
            Return CType(results(0),Integer())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ElencoTODOsAsync(ByVal BD As String)
            Me.ElencoTODOsAsync(BD, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ElencoTODOsAsync(ByVal BD As String, ByVal userState As Object)
            If (Me.ElencoTODOsOperationCompleted Is Nothing) Then
                Me.ElencoTODOsOperationCompleted = AddressOf Me.OnElencoTODOsOperationCompleted
            End If
            Me.InvokeAsync("ElencoTODOs", New Object() {BD}, Me.ElencoTODOsOperationCompleted, userState)
        End Sub
        
        Private Sub OnElencoTODOsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ElencoTODOsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ElencoTODOsCompleted(Me, New ElencoTODOsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/GetEmail", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub GetEmail(ByVal BD As String, ByVal Doc As Integer, ByRef Dest As String, ByRef Email As String)
            Dim results() As Object = Me.Invoke("GetEmail", New Object() {BD, Doc, Dest, Email})
            Dest = CType(results(0),String)
            Email = CType(results(1),String)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmailAsync(ByVal BD As String, ByVal Doc As Integer, ByVal Dest As String, ByVal Email As String)
            Me.GetEmailAsync(BD, Doc, Dest, Email, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmailAsync(ByVal BD As String, ByVal Doc As Integer, ByVal Dest As String, ByVal Email As String, ByVal userState As Object)
            If (Me.GetEmailOperationCompleted Is Nothing) Then
                Me.GetEmailOperationCompleted = AddressOf Me.OnGetEmailOperationCompleted
            End If
            Me.InvokeAsync("GetEmail", New Object() {BD, Doc, Dest, Email}, Me.GetEmailOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmailOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmailCompleted(Me, New GetEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LoginIDValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/GetTODO", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTODO(ByVal BD As String, ByVal T As Integer) As Todo
            Dim results() As Object = Me.Invoke("GetTODO", New Object() {BD, T})
            Return CType(results(0),Todo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTODOAsync(ByVal BD As String, ByVal T As Integer)
            Me.GetTODOAsync(BD, T, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTODOAsync(ByVal BD As String, ByVal T As Integer, ByVal userState As Object)
            If (Me.GetTODOOperationCompleted Is Nothing) Then
                Me.GetTODOOperationCompleted = AddressOf Me.OnGetTODOOperationCompleted
            End If
            Me.InvokeAsync("GetTODO", New Object() {BD, T}, Me.GetTODOOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTODOOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTODOCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTODOCompleted(Me, New GetTODOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/GetDocumentSchema", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDocumentSchema(ByVal App As String, ByVal SISINFO As String, ByVal SN As String, ByVal UserName As String, ByVal ObjType As String) As String
            Dim results() As Object = Me.Invoke("GetDocumentSchema", New Object() {App, SISINFO, SN, UserName, ObjType})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDocumentSchemaAsync(ByVal App As String, ByVal SISINFO As String, ByVal SN As String, ByVal UserName As String, ByVal ObjType As String)
            Me.GetDocumentSchemaAsync(App, SISINFO, SN, UserName, ObjType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDocumentSchemaAsync(ByVal App As String, ByVal SISINFO As String, ByVal SN As String, ByVal UserName As String, ByVal ObjType As String, ByVal userState As Object)
            If (Me.GetDocumentSchemaOperationCompleted Is Nothing) Then
                Me.GetDocumentSchemaOperationCompleted = AddressOf Me.OnGetDocumentSchemaOperationCompleted
            End If
            Me.InvokeAsync("GetDocumentSchema", New Object() {App, SISINFO, SN, UserName, ObjType}, Me.GetDocumentSchemaOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDocumentSchemaOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDocumentSchemaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDocumentSchemaCompleted(Me, New GetDocumentSchemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.elmisoftware.com/UserName", RequestNamespace:="http://www.elmisoftware.com/", ResponseNamespace:="http://www.elmisoftware.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UserName() As String
            Dim results() As Object = Me.Invoke("UserName", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UserNameAsync()
            Me.UserNameAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UserNameAsync(ByVal userState As Object)
            If (Me.UserNameOperationCompleted Is Nothing) Then
                Me.UserNameOperationCompleted = AddressOf Me.OnUserNameOperationCompleted
            End If
            Me.InvokeAsync("UserName", New Object(-1) {}, Me.UserNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnUserNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.UserNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UserNameCompleted(Me, New UserNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.elmisoftware.com/"),  _
     System.Xml.Serialization.XmlRootAttribute([Namespace]:="http://www.elmisoftware.com/", IsNullable:=false)>  _
    Partial Public Class LoginID
        Inherits System.Web.Services.Protocols.SoapHeader
        
        Private idField As String
        
        Private anyAttrField() As System.Xml.XmlAttribute
        
        '''<remarks/>
        Public Property ID() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAnyAttributeAttribute()>  _
        Public Property AnyAttr() As System.Xml.XmlAttribute()
            Get
                Return Me.anyAttrField
            End Get
            Set
                Me.anyAttrField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.elmisoftware.com/")>  _
    Partial Public Class Todo
        
        Private idField As Integer
        
        Private bancaDatiField As String
        
        Private fromUserField As String
        
        Private userNameField As String
        
        Private sessionIdField As Integer
        
        Private actionTypeField As Actions
        
        Private priorityField As Integer
        
        Private startDateField As Date
        
        Private expireDateField As Date
        
        Private creationDateField As Date
        
        Private stopDateField As Date
        
        Private descriptionField As String
        
        Private uRLField As String
        
        Private closedField As Boolean
        
        Private openedField As Boolean
        
        Private expireCodeField As Integer
        
        Private userTypeField As PermissionType
        
        Private objIdField As Integer
        
        Private gruppoField As String
        
        '''<remarks/>
        Public Property ID() As Integer
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BancaDati() As String
            Get
                Return Me.bancaDatiField
            End Get
            Set
                Me.bancaDatiField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FromUser() As String
            Get
                Return Me.fromUserField
            End Get
            Set
                Me.fromUserField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserName() As String
            Get
                Return Me.userNameField
            End Get
            Set
                Me.userNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SessionId() As Integer
            Get
                Return Me.sessionIdField
            End Get
            Set
                Me.sessionIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ActionType() As Actions
            Get
                Return Me.actionTypeField
            End Get
            Set
                Me.actionTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Priority() As Integer
            Get
                Return Me.priorityField
            End Get
            Set
                Me.priorityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StartDate() As Date
            Get
                Return Me.startDateField
            End Get
            Set
                Me.startDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ExpireDate() As Date
            Get
                Return Me.expireDateField
            End Get
            Set
                Me.expireDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreationDate() As Date
            Get
                Return Me.creationDateField
            End Get
            Set
                Me.creationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StopDate() As Date
            Get
                Return Me.stopDateField
            End Get
            Set
                Me.stopDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property URL() As String
            Get
                Return Me.uRLField
            End Get
            Set
                Me.uRLField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Closed() As Boolean
            Get
                Return Me.closedField
            End Get
            Set
                Me.closedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Opened() As Boolean
            Get
                Return Me.openedField
            End Get
            Set
                Me.openedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ExpireCode() As Integer
            Get
                Return Me.expireCodeField
            End Get
            Set
                Me.expireCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserType() As PermissionType
            Get
                Return Me.userTypeField
            End Get
            Set
                Me.userTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ObjId() As Integer
            Get
                Return Me.objIdField
            End Get
            Set
                Me.objIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Gruppo() As String
            Get
                Return Me.gruppoField
            End Get
            Set
                Me.gruppoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.elmisoftware.com/")>  _
    Public Enum Actions
        
        '''<remarks/>
        None
        
        '''<remarks/>
        Notify
        
        '''<remarks/>
        Print
        
        '''<remarks/>
        Mail
        
        '''<remarks/>
        Fax
        
        '''<remarks/>
        [Call]
        
        '''<remarks/>
        Approve
        
        '''<remarks/>
        ImageCheck
        
        '''<remarks/>
        ImageSign
        
        '''<remarks/>
        Sign
        
        '''<remarks/>
        Burn
        
        '''<remarks/>
        [New]
        
        '''<remarks/>
        Assign
        
        '''<remarks/>
        DigitalSign
        
        '''<remarks/>
        FillForm
        
        '''<remarks/>
        [Event]
        
        '''<remarks/>
        BioSign
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.elmisoftware.com/")>  _
    Public Enum PermissionType
        
        '''<remarks/>
        User
        
        '''<remarks/>
        Group
        
        '''<remarks/>
        Contact
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.elmisoftware.com/")>  _
    Partial Public Class DocumentTag
        
        Private tagTypeField As String
        
        Private tagNameField As String
        
        Private tagValueField As String
        
        Private tagLookupValueField As String
        
        Private tagDefaultValueField As String
        
        Private tagInputMaskField As String
        
        Private indexField As Integer
        
        Private requiredField As Boolean
        
        Private editableField As Boolean
        
        Private additionalDataField() As String
        
        '''<remarks/>
        Public Property TagType() As String
            Get
                Return Me.tagTypeField
            End Get
            Set
                Me.tagTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TagName() As String
            Get
                Return Me.tagNameField
            End Get
            Set
                Me.tagNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TagValue() As String
            Get
                Return Me.tagValueField
            End Get
            Set
                Me.tagValueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TagLookupValue() As String
            Get
                Return Me.tagLookupValueField
            End Get
            Set
                Me.tagLookupValueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TagDefaultValue() As String
            Get
                Return Me.tagDefaultValueField
            End Get
            Set
                Me.tagDefaultValueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TagInputMask() As String
            Get
                Return Me.tagInputMaskField
            End Get
            Set
                Me.tagInputMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Index() As Integer
            Get
                Return Me.indexField
            End Get
            Set
                Me.indexField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Required() As Boolean
            Get
                Return Me.requiredField
            End Get
            Set
                Me.requiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Editable() As Boolean
            Get
                Return Me.editableField
            End Get
            Set
                Me.editableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AdditionalData() As String()
            Get
                Return Me.additionalDataField
            End Get
            Set
                Me.additionalDataField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.elmisoftware.com/")>  _
    Partial Public Class Revisione
        
        Private numeroField As Integer
        
        Private idField As Integer
        
        Private commentoField As String
        
        Private dataField As Date
        
        Private computerField As String
        
        Private utenteField As String
        
        Private serialeCDField As String
        
        Private cryptatoField As Boolean
        
        Private kByteField As Long
        
        Private improntaField As String
        
        Private filenameField As String
        
        Private speditoField As String
        
        Private firmatoField As String
        
        Private conservatoField As String
        
        '''<remarks/>
        Public Property Numero() As Integer
            Get
                Return Me.numeroField
            End Get
            Set
                Me.numeroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property id() As Integer
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Commento() As String
            Get
                Return Me.commentoField
            End Get
            Set
                Me.commentoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Data() As Date
            Get
                Return Me.dataField
            End Get
            Set
                Me.dataField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Computer() As String
            Get
                Return Me.computerField
            End Get
            Set
                Me.computerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Utente() As String
            Get
                Return Me.utenteField
            End Get
            Set
                Me.utenteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SerialeCD() As String
            Get
                Return Me.serialeCDField
            End Get
            Set
                Me.serialeCDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Cryptato() As Boolean
            Get
                Return Me.cryptatoField
            End Get
            Set
                Me.cryptatoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property KByte() As Long
            Get
                Return Me.kByteField
            End Get
            Set
                Me.kByteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Impronta() As String
            Get
                Return Me.improntaField
            End Get
            Set
                Me.improntaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Filename() As String
            Get
                Return Me.filenameField
            End Get
            Set
                Me.filenameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Spedito() As String
            Get
                Return Me.speditoField
            End Get
            Set
                Me.speditoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Firmato() As String
            Get
                Return Me.firmatoField
            End Get
            Set
                Me.firmatoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Conservato() As String
            Get
                Return Me.conservatoField
            End Get
            Set
                Me.conservatoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.elmisoftware.com/")>  _
    Partial Public Class Documento
        
        Private immaginiField() As Revisione
        
        Private tipoContenutoLookupField As String
        
        Private tipoDocumentoLookupField As String
        
        Private statusLookupField As String
        
        Private dtProtocolloField As String
        
        Private dtDocumentoField As String
        
        Private dtArchiviazioneField As String
        
        Private dtScadenzaField As String
        
        Private dtPresaInCaricoField As String
        
        Private tagsField() As DocumentTag
        
        Private toUserField As String
        
        Private openedField As Boolean
        
        Private closedField As Boolean
        
        Private riservatoField As Boolean
        
        Private havePreviewField As Boolean
        
        Private isIndexedField As Boolean
        
        Private protocolloUfficialeField As String
        
        Private statusTypeField As StatusType
        
        Private idField As Integer
        
        Private revisioneField As Integer
        
        Private iDRevisioneField As Integer
        
        Private bancaDatiField As String
        
        Private descrizioneField As String
        
        Private oggettoProtocolloField As String
        
        Private tipoTrasportoField As String
        
        Private codiceTipoTrasportoField As String
        
        Private direzioneField As String
        
        Private proprietarioField As String
        
        Private sessioneEmergenzaField As String
        
        Private listaField As String
        
        Private raccoglitoreField As String
        
        Private elencoRaccoglitoreField As String
        
        Private commentoField As String
        
        Private tipoDocumentoField As String
        
        Private decodificaTipoDocumentoField As String
        
        Private numeroDocumentoField As String
        
        Private protocolloField As String
        
        Private annoProtocolloField As Integer
        
        Private numeroPraticaField As String
        
        Private annoPraticaField As String
        
        Private dataDocumentoField As Date
        
        Private dataArchiviazioneField As Date
        
        Private dataSpedizioneField As Date
        
        Private dataRicezioneField As Date
        
        Private dataScadenzaField As Date
        
        Private dataRevisioneField As Date
        
        Private dataFirmaField As Date
        
        Private dataMasterizzazioneField As Date
        
        Private dataProtocolloField As Date
        
        Private dataModificaField As Date
        
        Private daCompletareField As Boolean
        
        Private approvatoField As Boolean
        
        Private rifiutatoField As Boolean
        
        Private firmatoField As Boolean
        
        Private marcatoField As Boolean
        
        Private masterizzatoField As Boolean
        
        Private daMasterizzareField As Boolean
        
        Private daFirmareField As Boolean
        
        Private criptatoField As Boolean
        
        Private modificatoField As Boolean
        
        Private canViewField As Boolean
        
        Private canAuthorizeField As Boolean
        
        Private canApproveField As Boolean
        
        Private canEditField As Boolean
        
        Private canDeleteField As Boolean
        
        Private canPrintField As Boolean
        
        Private canCreateField As Boolean
        
        Private canAddImageField As Boolean
        
        Private utenteApprovatoreField As String
        
        Private utenteRevisoreField As String
        
        Private utenteFirmaField As String
        
        Private utenteMarcaField As String
        
        Private utenteMasterizzatoreField As String
        
        Private permessiField As Permessi
        
        Private computerField As String
        
        Private serialeCDField As String
        
        Private improntaField As String
        
        Private kbyteField As Long
        
        Private numeroImmaginiField As Integer
        
        Private tipoChiaveField() As String
        
        Private nomeChiaveField() As String
        
        Private valoreChiaveField() As String
        
        Private lookupValoreChiaveField() As String
        
        Private rubricaMittenteField As String
        
        Private mittenteField As String
        
        Private destinatariInterniField As String
        
        Private destinatariEsterniField As String
        
        Private destinatariInterniUtentiField As String
        
        Private destinatariInterniPCField As String
        
        Private destinatariEsterniPCField As String
        
        Private destinatariInterniUtentiPCField As String
        
        Private protocolloEsternoField As String
        
        Private dataProtocolloEsternoField As Date
        
        Private filenameField As String
        
        Private workflowField As String
        
        Private passoWorkflowField As Integer
        
        Private distribuzioneField As String
        
        Private registroField As String
        
        Private statusField As String
        
        Private tipoContenutoField As ContentType
        
        Private firmatarioField As String
        
        Private soggettoFirmatarioField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayItemAttribute(IsNullable:=false)>  _
        Public Property Immagini() As Revisione()
            Get
                Return Me.immaginiField
            End Get
            Set
                Me.immaginiField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TipoContenutoLookup() As String
            Get
                Return Me.tipoContenutoLookupField
            End Get
            Set
                Me.tipoContenutoLookupField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TipoDocumentoLookup() As String
            Get
                Return Me.tipoDocumentoLookupField
            End Get
            Set
                Me.tipoDocumentoLookupField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StatusLookup() As String
            Get
                Return Me.statusLookupField
            End Get
            Set
                Me.statusLookupField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DtProtocollo() As String
            Get
                Return Me.dtProtocolloField
            End Get
            Set
                Me.dtProtocolloField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DtDocumento() As String
            Get
                Return Me.dtDocumentoField
            End Get
            Set
                Me.dtDocumentoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DtArchiviazione() As String
            Get
                Return Me.dtArchiviazioneField
            End Get
            Set
                Me.dtArchiviazioneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DtScadenza() As String
            Get
                Return Me.dtScadenzaField
            End Get
            Set
                Me.dtScadenzaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DtPresaInCarico() As String
            Get
                Return Me.dtPresaInCaricoField
            End Get
            Set
                Me.dtPresaInCaricoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayItemAttribute(IsNullable:=false)>  _
        Public Property Tags() As DocumentTag()
            Get
                Return Me.tagsField
            End Get
            Set
                Me.tagsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ToUser() As String
            Get
                Return Me.toUserField
            End Get
            Set
                Me.toUserField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Opened() As Boolean
            Get
                Return Me.openedField
            End Get
            Set
                Me.openedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Closed() As Boolean
            Get
                Return Me.closedField
            End Get
            Set
                Me.closedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Riservato() As Boolean
            Get
                Return Me.riservatoField
            End Get
            Set
                Me.riservatoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HavePreview() As Boolean
            Get
                Return Me.havePreviewField
            End Get
            Set
                Me.havePreviewField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsIndexed() As Boolean
            Get
                Return Me.isIndexedField
            End Get
            Set
                Me.isIndexedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProtocolloUfficiale() As String
            Get
                Return Me.protocolloUfficialeField
            End Get
            Set
                Me.protocolloUfficialeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StatusType() As StatusType
            Get
                Return Me.statusTypeField
            End Get
            Set
                Me.statusTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property id() As Integer
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Revisione() As Integer
            Get
                Return Me.revisioneField
            End Get
            Set
                Me.revisioneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IDRevisione() As Integer
            Get
                Return Me.iDRevisioneField
            End Get
            Set
                Me.iDRevisioneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BancaDati() As String
            Get
                Return Me.bancaDatiField
            End Get
            Set
                Me.bancaDatiField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Descrizione() As String
            Get
                Return Me.descrizioneField
            End Get
            Set
                Me.descrizioneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OggettoProtocollo() As String
            Get
                Return Me.oggettoProtocolloField
            End Get
            Set
                Me.oggettoProtocolloField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TipoTrasporto() As String
            Get
                Return Me.tipoTrasportoField
            End Get
            Set
                Me.tipoTrasportoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CodiceTipoTrasporto() As String
            Get
                Return Me.codiceTipoTrasportoField
            End Get
            Set
                Me.codiceTipoTrasportoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Direzione() As String
            Get
                Return Me.direzioneField
            End Get
            Set
                Me.direzioneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Proprietario() As String
            Get
                Return Me.proprietarioField
            End Get
            Set
                Me.proprietarioField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SessioneEmergenza() As String
            Get
                Return Me.sessioneEmergenzaField
            End Get
            Set
                Me.sessioneEmergenzaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Lista() As String
            Get
                Return Me.listaField
            End Get
            Set
                Me.listaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Raccoglitore() As String
            Get
                Return Me.raccoglitoreField
            End Get
            Set
                Me.raccoglitoreField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ElencoRaccoglitore() As String
            Get
                Return Me.elencoRaccoglitoreField
            End Get
            Set
                Me.elencoRaccoglitoreField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Commento() As String
            Get
                Return Me.commentoField
            End Get
            Set
                Me.commentoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TipoDocumento() As String
            Get
                Return Me.tipoDocumentoField
            End Get
            Set
                Me.tipoDocumentoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DecodificaTipoDocumento() As String
            Get
                Return Me.decodificaTipoDocumentoField
            End Get
            Set
                Me.decodificaTipoDocumentoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NumeroDocumento() As String
            Get
                Return Me.numeroDocumentoField
            End Get
            Set
                Me.numeroDocumentoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Protocollo() As String
            Get
                Return Me.protocolloField
            End Get
            Set
                Me.protocolloField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AnnoProtocollo() As Integer
            Get
                Return Me.annoProtocolloField
            End Get
            Set
                Me.annoProtocolloField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NumeroPratica() As String
            Get
                Return Me.numeroPraticaField
            End Get
            Set
                Me.numeroPraticaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AnnoPratica() As String
            Get
                Return Me.annoPraticaField
            End Get
            Set
                Me.annoPraticaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataDocumento() As Date
            Get
                Return Me.dataDocumentoField
            End Get
            Set
                Me.dataDocumentoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataArchiviazione() As Date
            Get
                Return Me.dataArchiviazioneField
            End Get
            Set
                Me.dataArchiviazioneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataSpedizione() As Date
            Get
                Return Me.dataSpedizioneField
            End Get
            Set
                Me.dataSpedizioneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataRicezione() As Date
            Get
                Return Me.dataRicezioneField
            End Get
            Set
                Me.dataRicezioneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataScadenza() As Date
            Get
                Return Me.dataScadenzaField
            End Get
            Set
                Me.dataScadenzaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataRevisione() As Date
            Get
                Return Me.dataRevisioneField
            End Get
            Set
                Me.dataRevisioneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataFirma() As Date
            Get
                Return Me.dataFirmaField
            End Get
            Set
                Me.dataFirmaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataMasterizzazione() As Date
            Get
                Return Me.dataMasterizzazioneField
            End Get
            Set
                Me.dataMasterizzazioneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataProtocollo() As Date
            Get
                Return Me.dataProtocolloField
            End Get
            Set
                Me.dataProtocolloField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataModifica() As Date
            Get
                Return Me.dataModificaField
            End Get
            Set
                Me.dataModificaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DaCompletare() As Boolean
            Get
                Return Me.daCompletareField
            End Get
            Set
                Me.daCompletareField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Approvato() As Boolean
            Get
                Return Me.approvatoField
            End Get
            Set
                Me.approvatoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Rifiutato() As Boolean
            Get
                Return Me.rifiutatoField
            End Get
            Set
                Me.rifiutatoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Firmato() As Boolean
            Get
                Return Me.firmatoField
            End Get
            Set
                Me.firmatoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Marcato() As Boolean
            Get
                Return Me.marcatoField
            End Get
            Set
                Me.marcatoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Masterizzato() As Boolean
            Get
                Return Me.masterizzatoField
            End Get
            Set
                Me.masterizzatoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DaMasterizzare() As Boolean
            Get
                Return Me.daMasterizzareField
            End Get
            Set
                Me.daMasterizzareField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DaFirmare() As Boolean
            Get
                Return Me.daFirmareField
            End Get
            Set
                Me.daFirmareField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Criptato() As Boolean
            Get
                Return Me.criptatoField
            End Get
            Set
                Me.criptatoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Modificato() As Boolean
            Get
                Return Me.modificatoField
            End Get
            Set
                Me.modificatoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanView() As Boolean
            Get
                Return Me.canViewField
            End Get
            Set
                Me.canViewField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanAuthorize() As Boolean
            Get
                Return Me.canAuthorizeField
            End Get
            Set
                Me.canAuthorizeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanApprove() As Boolean
            Get
                Return Me.canApproveField
            End Get
            Set
                Me.canApproveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanEdit() As Boolean
            Get
                Return Me.canEditField
            End Get
            Set
                Me.canEditField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanDelete() As Boolean
            Get
                Return Me.canDeleteField
            End Get
            Set
                Me.canDeleteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanPrint() As Boolean
            Get
                Return Me.canPrintField
            End Get
            Set
                Me.canPrintField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanCreate() As Boolean
            Get
                Return Me.canCreateField
            End Get
            Set
                Me.canCreateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanAddImage() As Boolean
            Get
                Return Me.canAddImageField
            End Get
            Set
                Me.canAddImageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UtenteApprovatore() As String
            Get
                Return Me.utenteApprovatoreField
            End Get
            Set
                Me.utenteApprovatoreField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UtenteRevisore() As String
            Get
                Return Me.utenteRevisoreField
            End Get
            Set
                Me.utenteRevisoreField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UtenteFirma() As String
            Get
                Return Me.utenteFirmaField
            End Get
            Set
                Me.utenteFirmaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UtenteMarca() As String
            Get
                Return Me.utenteMarcaField
            End Get
            Set
                Me.utenteMarcaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UtenteMasterizzatore() As String
            Get
                Return Me.utenteMasterizzatoreField
            End Get
            Set
                Me.utenteMasterizzatoreField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Permessi() As Permessi
            Get
                Return Me.permessiField
            End Get
            Set
                Me.permessiField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Computer() As String
            Get
                Return Me.computerField
            End Get
            Set
                Me.computerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SerialeCD() As String
            Get
                Return Me.serialeCDField
            End Get
            Set
                Me.serialeCDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Impronta() As String
            Get
                Return Me.improntaField
            End Get
            Set
                Me.improntaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Kbyte() As Long
            Get
                Return Me.kbyteField
            End Get
            Set
                Me.kbyteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NumeroImmagini() As Integer
            Get
                Return Me.numeroImmaginiField
            End Get
            Set
                Me.numeroImmaginiField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TipoChiave() As String()
            Get
                Return Me.tipoChiaveField
            End Get
            Set
                Me.tipoChiaveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NomeChiave() As String()
            Get
                Return Me.nomeChiaveField
            End Get
            Set
                Me.nomeChiaveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ValoreChiave() As String()
            Get
                Return Me.valoreChiaveField
            End Get
            Set
                Me.valoreChiaveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LookupValoreChiave() As String()
            Get
                Return Me.lookupValoreChiaveField
            End Get
            Set
                Me.lookupValoreChiaveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RubricaMittente() As String
            Get
                Return Me.rubricaMittenteField
            End Get
            Set
                Me.rubricaMittenteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Mittente() As String
            Get
                Return Me.mittenteField
            End Get
            Set
                Me.mittenteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DestinatariInterni() As String
            Get
                Return Me.destinatariInterniField
            End Get
            Set
                Me.destinatariInterniField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DestinatariEsterni() As String
            Get
                Return Me.destinatariEsterniField
            End Get
            Set
                Me.destinatariEsterniField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DestinatariInterniUtenti() As String
            Get
                Return Me.destinatariInterniUtentiField
            End Get
            Set
                Me.destinatariInterniUtentiField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DestinatariInterniPC() As String
            Get
                Return Me.destinatariInterniPCField
            End Get
            Set
                Me.destinatariInterniPCField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DestinatariEsterniPC() As String
            Get
                Return Me.destinatariEsterniPCField
            End Get
            Set
                Me.destinatariEsterniPCField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DestinatariInterniUtentiPC() As String
            Get
                Return Me.destinatariInterniUtentiPCField
            End Get
            Set
                Me.destinatariInterniUtentiPCField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProtocolloEsterno() As String
            Get
                Return Me.protocolloEsternoField
            End Get
            Set
                Me.protocolloEsternoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataProtocolloEsterno() As Date
            Get
                Return Me.dataProtocolloEsternoField
            End Get
            Set
                Me.dataProtocolloEsternoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Filename() As String
            Get
                Return Me.filenameField
            End Get
            Set
                Me.filenameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Workflow() As String
            Get
                Return Me.workflowField
            End Get
            Set
                Me.workflowField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PassoWorkflow() As Integer
            Get
                Return Me.passoWorkflowField
            End Get
            Set
                Me.passoWorkflowField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Distribuzione() As String
            Get
                Return Me.distribuzioneField
            End Get
            Set
                Me.distribuzioneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Registro() As String
            Get
                Return Me.registroField
            End Get
            Set
                Me.registroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TipoContenuto() As ContentType
            Get
                Return Me.tipoContenutoField
            End Get
            Set
                Me.tipoContenutoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Firmatario() As String
            Get
                Return Me.firmatarioField
            End Get
            Set
                Me.firmatarioField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SoggettoFirmatario() As String
            Get
                Return Me.soggettoFirmatarioField
            End Get
            Set
                Me.soggettoFirmatarioField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.elmisoftware.com/")>  _
    Public Enum StatusType
        
        '''<remarks/>
        Active
        
        '''<remarks/>
        Suspended
        
        '''<remarks/>
        Closed
        
        '''<remarks/>
        Aborted
        
        '''<remarks/>
        Deleted
        
        '''<remarks/>
        Draft
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.elmisoftware.com/")>  _
    Partial Public Class Permessi
        
        Private isGroupField As Boolean
        
        Private permissionTypeField As PermissionType
        
        Private canReadField As Boolean
        
        Private canEditField As Boolean
        
        Private canCreateField As Boolean
        
        Private canDeleteField As Boolean
        
        Private canApproveField As Boolean
        
        Private canAuthorizeField As Boolean
        
        Private canAddImageField As Boolean
        
        Private canCreateFolderField As Boolean
        
        Private canEditFolderField As Boolean
        
        Private canDeleteFolderField As Boolean
        
        Private canReceiveMailField As Boolean
        
        Private canShareField As Boolean
        
        Private canProtocolInField As Boolean
        
        Private canProtocolOutField As Boolean
        
        Private canProtocolInternalField As Boolean
        
        Private canViewUpField As Boolean
        
        Private canViewDownField As Boolean
        
        Private canViewBrothersField As Boolean
        
        Private canSendField As Boolean
        
        Private canViewLogField As Boolean
        
        Private canRemoveImageField As Boolean
        
        Private cannotReadField As Boolean
        
        Private cannotEditField As Boolean
        
        Private cannotCreateField As Boolean
        
        Private cannotDeleteField As Boolean
        
        Private cannotApproveField As Boolean
        
        Private cannotAuthorizeField As Boolean
        
        Private cannotAddImageField As Boolean
        
        Private cannotCreateFolderField As Boolean
        
        Private cannotEditFolderField As Boolean
        
        Private cannotDeleteFolderField As Boolean
        
        Private cannotReceiveMailField As Boolean
        
        Private cannotShareField As Boolean
        
        Private cannotProtocolInField As Boolean
        
        Private cannotProtocolOutField As Boolean
        
        Private cannotProtocolInternalField As Boolean
        
        Private cannotViewUpField As Boolean
        
        Private cannotViewDownField As Boolean
        
        Private cannotViewBrothersField As Boolean
        
        Private cannotSendField As Boolean
        
        Private cannotViewLogField As Boolean
        
        Private cannotRemoveImageField As Boolean
        
        Private userNameField As String
        
        '''<remarks/>
        Public Property IsGroup() As Boolean
            Get
                Return Me.isGroupField
            End Get
            Set
                Me.isGroupField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PermissionType() As PermissionType
            Get
                Return Me.permissionTypeField
            End Get
            Set
                Me.permissionTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanRead() As Boolean
            Get
                Return Me.canReadField
            End Get
            Set
                Me.canReadField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanEdit() As Boolean
            Get
                Return Me.canEditField
            End Get
            Set
                Me.canEditField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanCreate() As Boolean
            Get
                Return Me.canCreateField
            End Get
            Set
                Me.canCreateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanDelete() As Boolean
            Get
                Return Me.canDeleteField
            End Get
            Set
                Me.canDeleteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanApprove() As Boolean
            Get
                Return Me.canApproveField
            End Get
            Set
                Me.canApproveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanAuthorize() As Boolean
            Get
                Return Me.canAuthorizeField
            End Get
            Set
                Me.canAuthorizeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanAddImage() As Boolean
            Get
                Return Me.canAddImageField
            End Get
            Set
                Me.canAddImageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanCreateFolder() As Boolean
            Get
                Return Me.canCreateFolderField
            End Get
            Set
                Me.canCreateFolderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanEditFolder() As Boolean
            Get
                Return Me.canEditFolderField
            End Get
            Set
                Me.canEditFolderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanDeleteFolder() As Boolean
            Get
                Return Me.canDeleteFolderField
            End Get
            Set
                Me.canDeleteFolderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanReceiveMail() As Boolean
            Get
                Return Me.canReceiveMailField
            End Get
            Set
                Me.canReceiveMailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanShare() As Boolean
            Get
                Return Me.canShareField
            End Get
            Set
                Me.canShareField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanProtocolIn() As Boolean
            Get
                Return Me.canProtocolInField
            End Get
            Set
                Me.canProtocolInField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanProtocolOut() As Boolean
            Get
                Return Me.canProtocolOutField
            End Get
            Set
                Me.canProtocolOutField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanProtocolInternal() As Boolean
            Get
                Return Me.canProtocolInternalField
            End Get
            Set
                Me.canProtocolInternalField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanViewUp() As Boolean
            Get
                Return Me.canViewUpField
            End Get
            Set
                Me.canViewUpField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanViewDown() As Boolean
            Get
                Return Me.canViewDownField
            End Get
            Set
                Me.canViewDownField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanViewBrothers() As Boolean
            Get
                Return Me.canViewBrothersField
            End Get
            Set
                Me.canViewBrothersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanSend() As Boolean
            Get
                Return Me.canSendField
            End Get
            Set
                Me.canSendField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanViewLog() As Boolean
            Get
                Return Me.canViewLogField
            End Get
            Set
                Me.canViewLogField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanRemoveImage() As Boolean
            Get
                Return Me.canRemoveImageField
            End Get
            Set
                Me.canRemoveImageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotRead() As Boolean
            Get
                Return Me.cannotReadField
            End Get
            Set
                Me.cannotReadField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotEdit() As Boolean
            Get
                Return Me.cannotEditField
            End Get
            Set
                Me.cannotEditField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotCreate() As Boolean
            Get
                Return Me.cannotCreateField
            End Get
            Set
                Me.cannotCreateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotDelete() As Boolean
            Get
                Return Me.cannotDeleteField
            End Get
            Set
                Me.cannotDeleteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotApprove() As Boolean
            Get
                Return Me.cannotApproveField
            End Get
            Set
                Me.cannotApproveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotAuthorize() As Boolean
            Get
                Return Me.cannotAuthorizeField
            End Get
            Set
                Me.cannotAuthorizeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotAddImage() As Boolean
            Get
                Return Me.cannotAddImageField
            End Get
            Set
                Me.cannotAddImageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotCreateFolder() As Boolean
            Get
                Return Me.cannotCreateFolderField
            End Get
            Set
                Me.cannotCreateFolderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotEditFolder() As Boolean
            Get
                Return Me.cannotEditFolderField
            End Get
            Set
                Me.cannotEditFolderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotDeleteFolder() As Boolean
            Get
                Return Me.cannotDeleteFolderField
            End Get
            Set
                Me.cannotDeleteFolderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotReceiveMail() As Boolean
            Get
                Return Me.cannotReceiveMailField
            End Get
            Set
                Me.cannotReceiveMailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotShare() As Boolean
            Get
                Return Me.cannotShareField
            End Get
            Set
                Me.cannotShareField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotProtocolIn() As Boolean
            Get
                Return Me.cannotProtocolInField
            End Get
            Set
                Me.cannotProtocolInField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotProtocolOut() As Boolean
            Get
                Return Me.cannotProtocolOutField
            End Get
            Set
                Me.cannotProtocolOutField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotProtocolInternal() As Boolean
            Get
                Return Me.cannotProtocolInternalField
            End Get
            Set
                Me.cannotProtocolInternalField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotViewUp() As Boolean
            Get
                Return Me.cannotViewUpField
            End Get
            Set
                Me.cannotViewUpField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotViewDown() As Boolean
            Get
                Return Me.cannotViewDownField
            End Get
            Set
                Me.cannotViewDownField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotViewBrothers() As Boolean
            Get
                Return Me.cannotViewBrothersField
            End Get
            Set
                Me.cannotViewBrothersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotSend() As Boolean
            Get
                Return Me.cannotSendField
            End Get
            Set
                Me.cannotSendField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotViewLog() As Boolean
            Get
                Return Me.cannotViewLogField
            End Get
            Set
                Me.cannotViewLogField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CannotRemoveImage() As Boolean
            Get
                Return Me.cannotRemoveImageField
            End Get
            Set
                Me.cannotRemoveImageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserName() As String
            Get
                Return Me.userNameField
            End Get
            Set
                Me.userNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.elmisoftware.com/")>  _
    Public Enum ContentType
        
        '''<remarks/>
        Document
        
        '''<remarks/>
        Folder
        
        '''<remarks/>
        Dossier
        
        '''<remarks/>
        Template
        
        '''<remarks/>
        Any
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.elmisoftware.com/")>  _
    Partial Public Class Rubrica
        
        Private driverField As String
        
        Private idField As String
        
        Private nomeField As String
        
        Private extraInfoField As String
        
        Private providerField As String
        
        Private tabellaField As String
        
        Private codiceField As String
        
        Private descrizioneField As String
        
        Private emailField As String
        
        Private faxField As String
        
        Private skypeField As String
        
        Private mSNField As String
        
        Private whereField As String
        
        Private ignoraNulliField As Boolean
        
        Private ricercaField As Boolean
        
        Private pecField As String
        
        Private emailQueryField As String
        
        Private pecQueryField As String
        
        Private faxQueryField As String
        
        '''<remarks/>
        Public Property Driver() As String
            Get
                Return Me.driverField
            End Get
            Set
                Me.driverField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ID() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Nome() As String
            Get
                Return Me.nomeField
            End Get
            Set
                Me.nomeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ExtraInfo() As String
            Get
                Return Me.extraInfoField
            End Get
            Set
                Me.extraInfoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Provider() As String
            Get
                Return Me.providerField
            End Get
            Set
                Me.providerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Tabella() As String
            Get
                Return Me.tabellaField
            End Get
            Set
                Me.tabellaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Codice() As String
            Get
                Return Me.codiceField
            End Get
            Set
                Me.codiceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Descrizione() As String
            Get
                Return Me.descrizioneField
            End Get
            Set
                Me.descrizioneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Email() As String
            Get
                Return Me.emailField
            End Get
            Set
                Me.emailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Fax() As String
            Get
                Return Me.faxField
            End Get
            Set
                Me.faxField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Skype() As String
            Get
                Return Me.skypeField
            End Get
            Set
                Me.skypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MSN() As String
            Get
                Return Me.mSNField
            End Get
            Set
                Me.mSNField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Where() As String
            Get
                Return Me.whereField
            End Get
            Set
                Me.whereField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IgnoraNulli() As Boolean
            Get
                Return Me.ignoraNulliField
            End Get
            Set
                Me.ignoraNulliField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Ricerca() As Boolean
            Get
                Return Me.ricercaField
            End Get
            Set
                Me.ricercaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Pec() As String
            Get
                Return Me.pecField
            End Get
            Set
                Me.pecField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmailQuery() As String
            Get
                Return Me.emailQueryField
            End Get
            Set
                Me.emailQueryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PecQuery() As String
            Get
                Return Me.pecQueryField
            End Get
            Set
                Me.pecQueryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FaxQuery() As String
            Get
                Return Me.faxQueryField
            End Get
            Set
                Me.faxQueryField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.elmisoftware.com/")>  _
    Partial Public Class TabellaLookup
        
        Private codiceField As String
        
        Private descrizioneField As String
        
        Private hintField As String
        
        Private emailField As String
        
        Private pecField As String
        
        Private sMSField As String
        
        Private faxField As String
        
        Private skypeField As String
        
        Private mSNField As String
        
        Private rubricaField As String
        
        '''<remarks/>
        Public Property Codice() As String
            Get
                Return Me.codiceField
            End Get
            Set
                Me.codiceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Descrizione() As String
            Get
                Return Me.descrizioneField
            End Get
            Set
                Me.descrizioneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Hint() As String
            Get
                Return Me.hintField
            End Get
            Set
                Me.hintField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property email() As String
            Get
                Return Me.emailField
            End Get
            Set
                Me.emailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Pec() As String
            Get
                Return Me.pecField
            End Get
            Set
                Me.pecField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SMS() As String
            Get
                Return Me.sMSField
            End Get
            Set
                Me.sMSField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property fax() As String
            Get
                Return Me.faxField
            End Get
            Set
                Me.faxField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Skype() As String
            Get
                Return Me.skypeField
            End Get
            Set
                Me.skypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MSN() As String
            Get
                Return Me.mSNField
            End Get
            Set
                Me.mSNField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Rubrica() As String
            Get
                Return Me.rubricaField
            End Get
            Set
                Me.rubricaField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.elmisoftware.com/")>  _
    Partial Public Class Titolario
        
        Private numeroField As Integer
        
        Private codiceField As String
        
        Private rubricaField As String
        
        Private descrizioneField As String
        
        Private statoField As String
        
        Private nodoPadreField As Integer
        
        Private tipoContenutiField As Integer
        
        Private listaField As String
        
        Private proprietarioField As String
        
        Private dataField As Date
        
        Private dataChiusuraField As Date
        
        Private utentiField() As Permessi
        
        Private ufficiField() As Permessi
        
        '''<remarks/>
        Public Property Numero() As Integer
            Get
                Return Me.numeroField
            End Get
            Set
                Me.numeroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Codice() As String
            Get
                Return Me.codiceField
            End Get
            Set
                Me.codiceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Rubrica() As String
            Get
                Return Me.rubricaField
            End Get
            Set
                Me.rubricaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Descrizione() As String
            Get
                Return Me.descrizioneField
            End Get
            Set
                Me.descrizioneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Stato() As String
            Get
                Return Me.statoField
            End Get
            Set
                Me.statoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NodoPadre() As Integer
            Get
                Return Me.nodoPadreField
            End Get
            Set
                Me.nodoPadreField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TipoContenuti() As Integer
            Get
                Return Me.tipoContenutiField
            End Get
            Set
                Me.tipoContenutiField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Lista() As String
            Get
                Return Me.listaField
            End Get
            Set
                Me.listaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Proprietario() As String
            Get
                Return Me.proprietarioField
            End Get
            Set
                Me.proprietarioField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Data() As Date
            Get
                Return Me.dataField
            End Get
            Set
                Me.dataField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataChiusura() As Date
            Get
                Return Me.dataChiusuraField
            End Get
            Set
                Me.dataChiusuraField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Utenti() As Permessi()
            Get
                Return Me.utentiField
            End Get
            Set
                Me.utentiField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Uffici() As Permessi()
            Get
                Return Me.ufficiField
            End Get
            Set
                Me.ufficiField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.elmisoftware.com/")>  _
    Partial Public Class DocumentoPratica
        
        Private sequenzaField As Integer
        
        Private tipologiaField As String
        
        Private responsabileField As String
        
        Private descrizioneField As String
        
        Private avvioScadenzaField As Integer
        
        Private giorniScadenzaField As Integer
        
        Private documentoField As Integer
        
        Private dataRevisioneField As Integer
        
        Private utenteRevisoreField As String
        
        '''<remarks/>
        Public Property Sequenza() As Integer
            Get
                Return Me.sequenzaField
            End Get
            Set
                Me.sequenzaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Tipologia() As String
            Get
                Return Me.tipologiaField
            End Get
            Set
                Me.tipologiaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Responsabile() As String
            Get
                Return Me.responsabileField
            End Get
            Set
                Me.responsabileField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Descrizione() As String
            Get
                Return Me.descrizioneField
            End Get
            Set
                Me.descrizioneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AvvioScadenza() As Integer
            Get
                Return Me.avvioScadenzaField
            End Get
            Set
                Me.avvioScadenzaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property GiorniScadenza() As Integer
            Get
                Return Me.giorniScadenzaField
            End Get
            Set
                Me.giorniScadenzaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Documento() As Integer
            Get
                Return Me.documentoField
            End Get
            Set
                Me.documentoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataRevisione() As Integer
            Get
                Return Me.dataRevisioneField
            End Get
            Set
                Me.dataRevisioneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UtenteRevisore() As String
            Get
                Return Me.utenteRevisoreField
            End Get
            Set
                Me.utenteRevisoreField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.elmisoftware.com/")>  _
    Partial Public Class StatoPratica
        
        Private tipoPadreField As String
        
        Private tabellaStatoField As String
        
        Private codiceStatoField As String
        
        Private documentiField() As DocumentoPratica
        
        '''<remarks/>
        Public Property TipoPadre() As String
            Get
                Return Me.tipoPadreField
            End Get
            Set
                Me.tipoPadreField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TabellaStato() As String
            Get
                Return Me.tabellaStatoField
            End Get
            Set
                Me.tabellaStatoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CodiceStato() As String
            Get
                Return Me.codiceStatoField
            End Get
            Set
                Me.codiceStatoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Documenti() As DocumentoPratica()
            Get
                Return Me.documentiField
            End Get
            Set
                Me.documentiField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.elmisoftware.com/")>  _
    Partial Public Class TipoDocumento
        
        Private allegatiPraticaField() As StatoPratica
        
        Private tipoContenutoField As ContentType
        
        Private sendWithAttachesField As Boolean
        
        Private sendOnlySignedField As Boolean
        
        Private signedFileFormatField As Integer
        
        Private raggruppamentoDistribuzioneField As String
        
        Private codiceField As String
        
        Private descrizioneField As String
        
        Private fullTextField As Boolean
        
        Private proprietarioField As String
        
        Private listaField As String
        
        Private raccoglitoreField As String
        
        Private hintField As String
        
        Private emailField As String
        
        Private faxField As String
        
        Private registroProtocolloField As String
        
        Private direzioneField As String
        
        Private daFirmareField As Boolean
        
        Private daApprovareField As Boolean
        
        Private suRaccoglitoreField As Boolean
        
        Private daMasterizzareField As Boolean
        
        Private tipoProtocolloField As String
        
        Private protettoField As Boolean
        
        Private ereditaField As Boolean
        
        Private scadenzaField As Integer
        
        Private nrRevisioniField As Integer
        
        Private nrChiaviField As Integer
        
        Private tipoChiaveField() As String
        
        Private valoreChiaveField() As String
        
        Private conservazioneField() As Boolean
        
        Private distribuzioneField() As Boolean
        
        Private mascheraChiaveField() As String
        
        Private defaultChiaveField() As String
        
        Private requiredField() As Boolean
        
        Private searchableField() As Boolean
        
        Private multipleField() As Boolean
        
        Private descrizioneChiaveField() As String
        
        Private nrChiaveField As Integer
        
        Private sullaScrivaniaField As Boolean
        
        Private labelField As Integer
        
        Private emailLocaleField As Integer
        
        Private emailSourceField As String
        
        Private printerNameField As String
        
        Private templatesField As String
        
        Private actionField As Integer
        
        Private searchSqlField As String
        
        Private raccoglitoriField As String
        
        Private lbDescrizioneField As String
        
        Private lbDataField As String
        
        Private lbNumeroField As String
        
        Private nDMaskField As String
        
        Private isAttachmentField As Boolean
        
        Private labelXField As Double
        
        Private labelYField As Double
        
        Private masterDataField As String
        
        Private checkListField As String
        
        Private classeField As String
        
        Private pDFAField As Boolean
        
        Private batchScanField As BatchScanType
        
        Private colonneField As String
        
        Private riservatoField As Boolean
        
        Private listaDistribuzioneField As String
        
        '''<remarks/>
        Public Property AllegatiPratica() As StatoPratica()
            Get
                Return Me.allegatiPraticaField
            End Get
            Set
                Me.allegatiPraticaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TipoContenuto() As ContentType
            Get
                Return Me.tipoContenutoField
            End Get
            Set
                Me.tipoContenutoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SendWithAttaches() As Boolean
            Get
                Return Me.sendWithAttachesField
            End Get
            Set
                Me.sendWithAttachesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SendOnlySigned() As Boolean
            Get
                Return Me.sendOnlySignedField
            End Get
            Set
                Me.sendOnlySignedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SignedFileFormat() As Integer
            Get
                Return Me.signedFileFormatField
            End Get
            Set
                Me.signedFileFormatField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RaggruppamentoDistribuzione() As String
            Get
                Return Me.raggruppamentoDistribuzioneField
            End Get
            Set
                Me.raggruppamentoDistribuzioneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Codice() As String
            Get
                Return Me.codiceField
            End Get
            Set
                Me.codiceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Descrizione() As String
            Get
                Return Me.descrizioneField
            End Get
            Set
                Me.descrizioneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FullText() As Boolean
            Get
                Return Me.fullTextField
            End Get
            Set
                Me.fullTextField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Proprietario() As String
            Get
                Return Me.proprietarioField
            End Get
            Set
                Me.proprietarioField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Lista() As String
            Get
                Return Me.listaField
            End Get
            Set
                Me.listaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Raccoglitore() As String
            Get
                Return Me.raccoglitoreField
            End Get
            Set
                Me.raccoglitoreField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Hint() As String
            Get
                Return Me.hintField
            End Get
            Set
                Me.hintField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Email() As String
            Get
                Return Me.emailField
            End Get
            Set
                Me.emailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Fax() As String
            Get
                Return Me.faxField
            End Get
            Set
                Me.faxField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RegistroProtocollo() As String
            Get
                Return Me.registroProtocolloField
            End Get
            Set
                Me.registroProtocolloField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Direzione() As String
            Get
                Return Me.direzioneField
            End Get
            Set
                Me.direzioneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DaFirmare() As Boolean
            Get
                Return Me.daFirmareField
            End Get
            Set
                Me.daFirmareField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DaApprovare() As Boolean
            Get
                Return Me.daApprovareField
            End Get
            Set
                Me.daApprovareField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SuRaccoglitore() As Boolean
            Get
                Return Me.suRaccoglitoreField
            End Get
            Set
                Me.suRaccoglitoreField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DaMasterizzare() As Boolean
            Get
                Return Me.daMasterizzareField
            End Get
            Set
                Me.daMasterizzareField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TipoProtocollo() As String
            Get
                Return Me.tipoProtocolloField
            End Get
            Set
                Me.tipoProtocolloField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Protetto() As Boolean
            Get
                Return Me.protettoField
            End Get
            Set
                Me.protettoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Eredita() As Boolean
            Get
                Return Me.ereditaField
            End Get
            Set
                Me.ereditaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Scadenza() As Integer
            Get
                Return Me.scadenzaField
            End Get
            Set
                Me.scadenzaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NrRevisioni() As Integer
            Get
                Return Me.nrRevisioniField
            End Get
            Set
                Me.nrRevisioniField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NrChiavi() As Integer
            Get
                Return Me.nrChiaviField
            End Get
            Set
                Me.nrChiaviField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TipoChiave() As String()
            Get
                Return Me.tipoChiaveField
            End Get
            Set
                Me.tipoChiaveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ValoreChiave() As String()
            Get
                Return Me.valoreChiaveField
            End Get
            Set
                Me.valoreChiaveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Conservazione() As Boolean()
            Get
                Return Me.conservazioneField
            End Get
            Set
                Me.conservazioneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Distribuzione() As Boolean()
            Get
                Return Me.distribuzioneField
            End Get
            Set
                Me.distribuzioneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MascheraChiave() As String()
            Get
                Return Me.mascheraChiaveField
            End Get
            Set
                Me.mascheraChiaveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DefaultChiave() As String()
            Get
                Return Me.defaultChiaveField
            End Get
            Set
                Me.defaultChiaveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Required() As Boolean()
            Get
                Return Me.requiredField
            End Get
            Set
                Me.requiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Searchable() As Boolean()
            Get
                Return Me.searchableField
            End Get
            Set
                Me.searchableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Multiple() As Boolean()
            Get
                Return Me.multipleField
            End Get
            Set
                Me.multipleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescrizioneChiave() As String()
            Get
                Return Me.descrizioneChiaveField
            End Get
            Set
                Me.descrizioneChiaveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NrChiave() As Integer
            Get
                Return Me.nrChiaveField
            End Get
            Set
                Me.nrChiaveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SullaScrivania() As Boolean
            Get
                Return Me.sullaScrivaniaField
            End Get
            Set
                Me.sullaScrivaniaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Label() As Integer
            Get
                Return Me.labelField
            End Get
            Set
                Me.labelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmailLocale() As Integer
            Get
                Return Me.emailLocaleField
            End Get
            Set
                Me.emailLocaleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmailSource() As String
            Get
                Return Me.emailSourceField
            End Get
            Set
                Me.emailSourceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PrinterName() As String
            Get
                Return Me.printerNameField
            End Get
            Set
                Me.printerNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Templates() As String
            Get
                Return Me.templatesField
            End Get
            Set
                Me.templatesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Action() As Integer
            Get
                Return Me.actionField
            End Get
            Set
                Me.actionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SearchSql() As String
            Get
                Return Me.searchSqlField
            End Get
            Set
                Me.searchSqlField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Raccoglitori() As String
            Get
                Return Me.raccoglitoriField
            End Get
            Set
                Me.raccoglitoriField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LbDescrizione() As String
            Get
                Return Me.lbDescrizioneField
            End Get
            Set
                Me.lbDescrizioneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LbData() As String
            Get
                Return Me.lbDataField
            End Get
            Set
                Me.lbDataField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LbNumero() As String
            Get
                Return Me.lbNumeroField
            End Get
            Set
                Me.lbNumeroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NDMask() As String
            Get
                Return Me.nDMaskField
            End Get
            Set
                Me.nDMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsAttachment() As Boolean
            Get
                Return Me.isAttachmentField
            End Get
            Set
                Me.isAttachmentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LabelX() As Double
            Get
                Return Me.labelXField
            End Get
            Set
                Me.labelXField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LabelY() As Double
            Get
                Return Me.labelYField
            End Get
            Set
                Me.labelYField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MasterData() As String
            Get
                Return Me.masterDataField
            End Get
            Set
                Me.masterDataField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CheckList() As String
            Get
                Return Me.checkListField
            End Get
            Set
                Me.checkListField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Classe() As String
            Get
                Return Me.classeField
            End Get
            Set
                Me.classeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PDFA() As Boolean
            Get
                Return Me.pDFAField
            End Get
            Set
                Me.pDFAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BatchScan() As BatchScanType
            Get
                Return Me.batchScanField
            End Get
            Set
                Me.batchScanField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Colonne() As String
            Get
                Return Me.colonneField
            End Get
            Set
                Me.colonneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Riservato() As Boolean
            Get
                Return Me.riservatoField
            End Get
            Set
                Me.riservatoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ListaDistribuzione() As String
            Get
                Return Me.listaDistribuzioneField
            End Get
            Set
                Me.listaDistribuzioneField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.elmisoftware.com/")>  _
    Public Enum BatchScanType
        
        '''<remarks/>
        None
        
        '''<remarks/>
        ReplaceAll
        
        '''<remarks/>
        Append
        
        '''<remarks/>
        ReplaceOnBegin
        
        '''<remarks/>
        ReplaceOnEnd
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.elmisoftware.com/")>  _
    Partial Public Class BancaDati
        
        Private uidField As String
        
        Private pwdField As String
        
        Private descrizioneField As String
        
        Private codiceField As String
        
        Private themeField As String
        
        Private percorsoField As String
        
        Private listaAutorizzazioneField As String
        
        Private publicAuthField As String
        
        Private providerField As String
        
        '''<remarks/>
        Public Property uid() As String
            Get
                Return Me.uidField
            End Get
            Set
                Me.uidField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property pwd() As String
            Get
                Return Me.pwdField
            End Get
            Set
                Me.pwdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Descrizione() As String
            Get
                Return Me.descrizioneField
            End Get
            Set
                Me.descrizioneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Codice() As String
            Get
                Return Me.codiceField
            End Get
            Set
                Me.codiceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Theme() As String
            Get
                Return Me.themeField
            End Get
            Set
                Me.themeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Percorso() As String
            Get
                Return Me.percorsoField
            End Get
            Set
                Me.percorsoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ListaAutorizzazione() As String
            Get
                Return Me.listaAutorizzazioneField
            End Get
            Set
                Me.listaAutorizzazioneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PublicAuth() As String
            Get
                Return Me.publicAuthField
            End Get
            Set
                Me.publicAuthField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Provider() As String
            Get
                Return Me.providerField
            End Get
            Set
                Me.providerField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.elmisoftware.com/")>  _
    Partial Public Class Post_IT
        
        Private idField As Integer
        
        Private documentField As Integer
        
        Private dataField As Date
        
        Private userNameField As String
        
        Private isPrivateField As Boolean
        
        Private textField As String
        
        Private fatherIdField As Integer
        
        Private repliesField() As Post_IT
        
        '''<remarks/>
        Public Property ID() As Integer
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Document() As Integer
            Get
                Return Me.documentField
            End Get
            Set
                Me.documentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Data() As Date
            Get
                Return Me.dataField
            End Get
            Set
                Me.dataField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserName() As String
            Get
                Return Me.userNameField
            End Get
            Set
                Me.userNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsPrivate() As Boolean
            Get
                Return Me.isPrivateField
            End Get
            Set
                Me.isPrivateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Text() As String
            Get
                Return Me.textField
            End Get
            Set
                Me.textField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FatherId() As Integer
            Get
                Return Me.fatherIdField
            End Get
            Set
                Me.fatherIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Replies() As Post_IT()
            Get
                Return Me.repliesField
            End Get
            Set
                Me.repliesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.elmisoftware.com/")>  _
    Partial Public Class UtenteMail
        
        Private idField As String
        
        Private eMailField As String
        
        Private eMailUserField As String
        
        Private eMailPasswordField As String
        
        '''<remarks/>
        Public Property Id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property eMail() As String
            Get
                Return Me.eMailField
            End Get
            Set
                Me.eMailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property eMailUser() As String
            Get
                Return Me.eMailUserField
            End Get
            Set
                Me.eMailUserField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property eMailPassword() As String
            Get
                Return Me.eMailPasswordField
            End Get
            Set
                Me.eMailPasswordField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub LoginCompletedEventHandler(ByVal sender As Object, ByVal e As LoginCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoginCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub LogOnCompletedEventHandler(ByVal sender As Object, ByVal e As LogOnCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LogOnCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub LogOnUserCompletedEventHandler(ByVal sender As Object, ByVal e As LogOnUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LogOnUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub getSameUserInRubricaCompletedEventHandler(ByVal sender As Object, ByVal e As getSameUserInRubricaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getSameUserInRubricaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Ute() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Tipo() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetRealUserCompletedEventHandler(ByVal sender As Object, ByVal e As GetRealUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRealUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub getUtenteMailByNomeAndDominioCompletedEventHandler(ByVal sender As Object, ByVal e As getUtenteMailByNomeAndDominioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getUtenteMailByNomeAndDominioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UtenteMail
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UtenteMail)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub getElencoUtentiMailByDominioCompletedEventHandler(ByVal sender As Object, ByVal e As getElencoUtentiMailByDominioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getElencoUtentiMailByDominioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UtenteMail()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UtenteMail())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub IsTokenValidCompletedEventHandler(ByVal sender As Object, ByVal e As IsTokenValidCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class IsTokenValidCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetFilenameCompletedEventHandler(ByVal sender As Object, ByVal e As GetFilenameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFilenameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetFileCompletedEventHandler(ByVal sender As Object, ByVal e As GetFileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetFileDateCompletedEventHandler(ByVal sender As Object, ByVal e As GetFileDateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFileDateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Date
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Date)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetFileSizeCompletedEventHandler(ByVal sender As Object, ByVal e As GetFileSizeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFileSizeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub AddPostItCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeletePostItCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetPostItCompletedEventHandler(ByVal sender As Object, ByVal e As GetPostItCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPostItCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Post_IT()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Post_IT())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub HasPostItCompletedEventHandler(ByVal sender As Object, ByVal e As HasPostItCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class HasPostItCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ElencoBancheDatiCompletedEventHandler(ByVal sender As Object, ByVal e As ElencoBancheDatiCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ElencoBancheDatiCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As BancaDati()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),BancaDati())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DettaglioBancaDatiCompletedEventHandler(ByVal sender As Object, ByVal e As DettaglioBancaDatiCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DettaglioBancaDatiCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As BancaDati
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),BancaDati)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ElencoTipiDocumentoCompletedEventHandler(ByVal sender As Object, ByVal e As ElencoTipiDocumentoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ElencoTipiDocumentoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TipoDocumento()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TipoDocumento())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ProprietaTipoDocumentoCompletedEventHandler(ByVal sender As Object, ByVal e As ProprietaTipoDocumentoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ProprietaTipoDocumentoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TipoDocumento
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TipoDocumento)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub TipologiaDocumentoCompletedEventHandler(ByVal sender As Object, ByVal e As TipologiaDocumentoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TipologiaDocumentoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TipoDocumento
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TipoDocumento)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ElencoTitolariCompletedEventHandler(ByVal sender As Object, ByVal e As ElencoTitolariCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ElencoTitolariCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Titolario()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Titolario())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreaTitolarioCompletedEventHandler(ByVal sender As Object, ByVal e As CreaTitolarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreaTitolarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SerialNumberKeyCompletedEventHandler(ByVal sender As Object, ByVal e As SerialNumberKeyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SerialNumberKeyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub IsSerialNumberValidCompletedEventHandler(ByVal sender As Object, ByVal e As IsSerialNumberValidCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class IsSerialNumberValidCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub IsSerialNumberExpiredCompletedEventHandler(ByVal sender As Object, ByVal e As IsSerialNumberExpiredCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class IsSerialNumberExpiredCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub IsSerialNumberNotPresentCompletedEventHandler(ByVal sender As Object, ByVal e As IsSerialNumberNotPresentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class IsSerialNumberNotPresentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InstallationIDCompletedEventHandler(ByVal sender As Object, ByVal e As InstallationIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InstallationIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ActiveProductCompletedEventHandler(ByVal sender As Object, ByVal e As ActiveProductCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ActiveProductCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DecodificaCompletedEventHandler(ByVal sender As Object, ByVal e As DecodificaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DecodificaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ValoriChiaveCompletedEventHandler(ByVal sender As Object, ByVal e As ValoriChiaveCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ValoriChiaveCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TabellaLookup()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TabellaLookup())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ElencoChiaviCompletedEventHandler(ByVal sender As Object, ByVal e As ElencoChiaviCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ElencoChiaviCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Rubrica()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Rubrica())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub TagTypeFieldsCompletedEventHandler(ByVal sender As Object, ByVal e As TagTypeFieldsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TagTypeFieldsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property values() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetEditUrlCompletedEventHandler(ByVal sender As Object, ByVal e As GetEditUrlCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEditUrlCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetLabelCompletedEventHandler(ByVal sender As Object, ByVal e As GetLabelCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLabelCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub NewEmergencySessionCompletedEventHandler(ByVal sender As Object, ByVal e As NewEmergencySessionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NewEmergencySessionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ProprietaDocumentoCompletedEventHandler(ByVal sender As Object, ByVal e As ProprietaDocumentoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ProprietaDocumentoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Documento
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Documento)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SaveCompletedEventHandler(ByVal sender As Object, ByVal e As SaveCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Errori() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub AddImageCompletedEventHandler(ByVal sender As Object, ByVal e As AddImageCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddImageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetImageCompletedEventHandler(ByVal sender As Object, ByVal e As GetImageCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetImageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property file() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CalcolaHashCompletedEventHandler(ByVal sender As Object, ByVal e As CalcolaHashCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CalcolaHashCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub RevisioniDocumentoCompletedEventHandler(ByVal sender As Object, ByVal e As RevisioniDocumentoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RevisioniDocumentoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Revisione()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Revisione())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ElencoCorrelatiCompletedEventHandler(ByVal sender As Object, ByVal e As ElencoCorrelatiCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ElencoCorrelatiCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub FirmaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub MasterizzaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteDocumentoCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteDocumentoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteDocumentoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub UpdateFileCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateFileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateFileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub UploadGDDCompletedEventHandler(ByVal sender As Object, ByVal e As UploadGDDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UploadGDDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Err() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub FindCompletedEventHandler(ByVal sender As Object, ByVal e As FindCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub NewImageCompletedEventHandler(ByVal sender As Object, ByVal e As NewImageCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NewImageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub AddToNewImageCompletedEventHandler(ByVal sender As Object, ByVal e As AddToNewImageCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddToNewImageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConfirmNewImageCompletedEventHandler(ByVal sender As Object, ByVal e As ConfirmNewImageCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConfirmNewImageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub getFavoritesCompletedEventHandler(ByVal sender As Object, ByVal e As getFavoritesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getFavoritesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub getReceivedCompletedEventHandler(ByVal sender As Object, ByVal e As getReceivedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getReceivedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub getReceivedCCCompletedEventHandler(ByVal sender As Object, ByVal e As getReceivedCCCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getReceivedCCCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub NextLottoCompletedEventHandler(ByVal sender As Object, ByVal e As NextLottoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NextLottoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub UltimoProtocolloCompletedEventHandler(ByVal sender As Object, ByVal e As UltimoProtocolloCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UltimoProtocolloCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ProtocolliCompletedEventHandler(ByVal sender As Object, ByVal e As ProtocolliCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ProtocolliCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub _RubricheCompletedEventHandler(ByVal sender As Object, ByVal e As _RubricheCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class _RubricheCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Rubrica()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Rubrica())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub VociRubricaCompletedEventHandler(ByVal sender As Object, ByVal e As VociRubricaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VociRubricaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TabellaLookup()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TabellaLookup())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub xxxxCambiaStatoCompletedEventHandler(ByVal sender As Object, ByVal e As xxxxCambiaStatoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class xxxxCambiaStatoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetImmagineCompletedEventHandler(ByVal sender As Object, ByVal e As GetImmagineCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetImmagineCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property file() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SalvaGDDCompletedEventHandler(ByVal sender As Object, ByVal e As SalvaGDDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SalvaGDDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Err() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ProtocollaGDDFileCompletedEventHandler(ByVal sender As Object, ByVal e As ProtocollaGDDFileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ProtocollaGDDFileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Errori() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetImageFileCompletedEventHandler(ByVal sender As Object, ByVal e As GetImageFileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetImageFileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property file() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SignHashCompletedEventHandler(ByVal sender As Object, ByVal e As SignHashCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SignHashCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetHashCompletedEventHandler(ByVal sender As Object, ByVal e As GetHashCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetHashCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property hash() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub FusioneCompletedEventHandler(ByVal sender As Object, ByVal e As FusioneCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FusioneCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Errori() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ElencoTODOsCompletedEventHandler(ByVal sender As Object, ByVal e As ElencoTODOsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ElencoTODOsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetEmailCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Dest() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Email() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetTODOCompletedEventHandler(ByVal sender As Object, ByVal e As GetTODOCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTODOCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Todo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Todo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetDocumentSchemaCompletedEventHandler(ByVal sender As Object, ByVal e As GetDocumentSchemaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDocumentSchemaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub UserNameCompletedEventHandler(ByVal sender As Object, ByVal e As UserNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UserNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
